// ################################################################################
// #
// # File:        G:/bin/p530/src/img/idl\inputmgrbindings_soap_tie.hh (the SOAP TIE Header file)
// # Description: Harmonizes TIE implementation classes in a Multi-ORB environment
// #
// # This file has been generated by the SOAP generator on 06 Jun 2016.
// # Do not delete it or edit it since changes will be 
// # lost when next generation happens.
// #
// ################################################################################

#ifndef _SCS_INPUTMGRBINDINGS_SOAP_TIE_HH_
#define _SCS_INPUTMGRBINDINGS_SOAP_TIE_HH_

#include <inputmgrbindings_soap.hh>

template<class T_SOAP> class InputMgrBindingsSOAP_TIE : public InputMgrBindingsSOAP {

 public:

   // ctor
   InputMgrBindingsSOAP_TIE(T_SOAP * objp) : InputMgrBindingsSOAP(), m_obj(objp), m_rel(1) {
   }

   // dtor
   virtual ~InputMgrBindingsSOAP_TIE() {
     if(m_rel) delete m_obj;
   }

   char * scs_implementation(void)
     throw(CORBA::SystemException) {
     return m_obj->scs_implementation();
   }
   char * scs_host(void)
     throw(CORBA::SystemException) {
     return m_obj->scs_host();
   }
   void   isAlive(void)
     throw(CORBA::SystemException) {
     m_obj->isAlive();
   }

   static InputMgrBindingsIdl_ptr _narrow(CORBA::Object_ptr p) {
     return InputMgrBindingsIdl::_narrow(p);
   }

   // IDL operations

   virtual ScsStatusIdl tryBind(const char * serverName, 
                                const char * objectName, 
                                ScsProcessIdl_out  destination, 
                                ScsProcessIdl_out  imgModule)
     throw(CORBA::SystemException) {
     return m_obj->tryBind(serverName, 
                           objectName, 
                           destination, 
                           imgModule);
   }

   virtual ScsStatusIdl getInputMgrObject(ScsProcessIdl_out  server)
     throw(CORBA::SystemException) {
     return m_obj->getInputMgrObject(server);
   }

   virtual void printBenchResults()
     throw(CORBA::SystemException) {
     m_obj->printBenchResults();
   }



 private:

   T_SOAP * m_obj;
   CORBA::Boolean m_rel;

   InputMgrBindingsSOAP_TIE(const InputMgrBindingsSOAP_TIE<T_SOAP>&){}
   void operator=(const InputMgrBindingsSOAP_TIE<T_SOAP>&){}

};


#define DEF_TIE_SOAP_InputMgrBindingsIdl(X)\
   typedef InputMgrBindingsSOAP_TIE<X> InputMgrBindingsSOAP_TIE##X;

#define TIE_SOAP_InputMgrBindingsIdl(X) InputMgrBindingsSOAP_TIE##X

#endif
