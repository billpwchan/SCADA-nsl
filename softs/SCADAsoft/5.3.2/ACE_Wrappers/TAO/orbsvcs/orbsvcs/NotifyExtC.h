// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler v1.6a_p10 ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be\be_codegen.cpp:135

#ifndef _TAO_IDL_NOTIFYEXTC_H_
#define _TAO_IDL_NOTIFYEXTC_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "orbsvcs/Notify/notify_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "CosNotifyChannelAdminC.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_Notify_Export

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from 
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_root/root_ch.cpp:62

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  class Collocation_Proxy_Broker;
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_module/module_ch.cpp:49

namespace NotifyExt
{
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:379
  
  typedef ::CORBA::Short Priority;
  typedef ::CORBA::Short_out Priority_out;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_Priority;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:52
  
  const NotifyExt::Priority minPriority = 0;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:52
  
  const NotifyExt::Priority maxPriority = 32767;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_enum/enum_ch.cpp:57
  
  enum PriorityModel
  {
    CLIENT_PROPAGATED,
    SERVER_DECLARED
  };
  
  typedef PriorityModel &PriorityModel_out;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_PriorityModel;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:52
  
  const char *const ThreadPool = "ThreadPool";
  
  // TAO_IDL - Generated from
  // be\be_type.cpp:269
  
  struct ThreadPoolParams;
  
  typedef
    TAO_Fixed_Var_T<
        ThreadPoolParams
      >
    ThreadPoolParams_var;
  
  typedef
    ThreadPoolParams &
    ThreadPoolParams_out;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:57
  
  struct TAO_Notify_Export ThreadPoolParams
  {
    typedef ThreadPoolParams_var _var_type;
    typedef ThreadPoolParams_out _out_type;
    
    static void _tao_any_destructor (void *);
    NotifyExt::PriorityModel priority_model;
    NotifyExt::Priority server_priority;
    ::CORBA::ULong stacksize;
    ::CORBA::ULong static_threads;
    ::CORBA::ULong dynamic_threads;
    NotifyExt::Priority default_priority;
    ::CORBA::Boolean allow_request_buffering;
    ::CORBA::ULong max_buffered_requests;
    ::CORBA::ULong max_request_buffer_size;
  };
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_ThreadPoolParams;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:52
  
  const char *const ThreadPoolLanes = "ThreadPoolLanes";
  
  // TAO_IDL - Generated from
  // be\be_type.cpp:269
  
  struct ThreadPoolLane;
  
  typedef
    TAO_Fixed_Var_T<
        ThreadPoolLane
      >
    ThreadPoolLane_var;
  
  typedef
    ThreadPoolLane &
    ThreadPoolLane_out;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:57
  
  struct TAO_Notify_Export ThreadPoolLane
  {
    typedef ThreadPoolLane_var _var_type;
    typedef ThreadPoolLane_out _out_type;
    
    static void _tao_any_destructor (void *);
    NotifyExt::PriorityModel priority_model;
    NotifyExt::Priority server_priority;
    NotifyExt::Priority lane_priority;
    ::CORBA::ULong static_threads;
    ::CORBA::ULong dynamic_threads;
  };
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_ThreadPoolLane;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:107

#if !defined (_NOTIFYEXT_THREADPOOLLANES_LIST_CH_)
#define _NOTIFYEXT_THREADPOOLLANES_LIST_CH_
  
  class ThreadPoolLanes_List;
  
  typedef
    TAO_FixedSeq_Var_T<
        ThreadPoolLanes_List
      >
    ThreadPoolLanes_List_var;
  
  typedef
    TAO_Seq_Out_T<
        ThreadPoolLanes_List
      >
    ThreadPoolLanes_List_out;
  
  class TAO_Notify_Export ThreadPoolLanes_List
    : public
        TAO::unbounded_value_sequence<
            ThreadPoolLane
          >
  {
  public:
    ThreadPoolLanes_List (void);
    ThreadPoolLanes_List ( ::CORBA::ULong max);
    ThreadPoolLanes_List (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ThreadPoolLane* buffer, 
        ::CORBA::Boolean release = false
      );
    ThreadPoolLanes_List (const ThreadPoolLanes_List &);
    virtual ~ThreadPoolLanes_List (void);
    
    static void _tao_any_destructor (void *);
    
    typedef ThreadPoolLanes_List_var _var_type;
    typedef ThreadPoolLanes_List_out _out_type;
    
    
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_ThreadPoolLanes_List;
  
  // TAO_IDL - Generated from
  // be\be_type.cpp:269
  
  struct ThreadPoolLanesParams;
  
  typedef
    TAO_Var_Var_T<
        ThreadPoolLanesParams
      >
    ThreadPoolLanesParams_var;
  
  typedef
    TAO_Out_T<
        ThreadPoolLanesParams
      >
    ThreadPoolLanesParams_out;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:57
  
  struct TAO_Notify_Export ThreadPoolLanesParams
  {
    typedef ThreadPoolLanesParams_var _var_type;
    typedef ThreadPoolLanesParams_out _out_type;
    
    static void _tao_any_destructor (void *);
    NotifyExt::PriorityModel priority_model;
    NotifyExt::Priority server_priority;
    ::CORBA::ULong stacksize;
    NotifyExt::ThreadPoolLanes_List lanes;
    ::CORBA::Boolean allow_borrowing;
    ::CORBA::Boolean allow_request_buffering;
    ::CORBA::ULong max_buffered_requests;
    ::CORBA::ULong max_request_buffer_size;
  };
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_ThreadPoolLanesParams;
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:644

#if !defined (_NOTIFYEXT_RECONNECTIONCALLBACK__VAR_OUT_CH_)
#define _NOTIFYEXT_RECONNECTIONCALLBACK__VAR_OUT_CH_
  
  class ReconnectionCallback;
  typedef ReconnectionCallback *ReconnectionCallback_ptr;
  
  typedef
    TAO_Objref_Var_T<
        ReconnectionCallback
      >
    ReconnectionCallback_var;
  
  typedef
    TAO_Objref_Out_T<
        ReconnectionCallback
      >
    ReconnectionCallback_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_NOTIFYEXT_RECONNECTIONCALLBACK_CH_)
#define _NOTIFYEXT_RECONNECTIONCALLBACK_CH_
  
  class TAO_Notify_Export ReconnectionCallback
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<ReconnectionCallback>;
    typedef ReconnectionCallback_ptr _ptr_type;
    typedef ReconnectionCallback_var _var_type;
    typedef ReconnectionCallback_out _out_type;
    
    // The static operations.
    static ReconnectionCallback_ptr _duplicate (ReconnectionCallback_ptr obj);
    
    static void _tao_release (ReconnectionCallback_ptr obj);
    
    static ReconnectionCallback_ptr _narrow (::CORBA::Object_ptr obj);
    static ReconnectionCallback_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ReconnectionCallback_ptr _nil (void)
    {
      return static_cast<ReconnectionCallback_ptr> (0);
    }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void reconnect (
        ::CORBA::Object_ptr new_connection);
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::Boolean is_alive (
        void);
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:216
    
    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_ReconnectionCallback_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    ReconnectionCallback (void);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void NotifyExt_ReconnectionCallback_setup_collocation (void);
    
    // Concrete non-local interface only.
    ReconnectionCallback (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ReconnectionCallback (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);
    
    virtual ~ReconnectionCallback (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ReconnectionCallback (const ReconnectionCallback &);
    
    void operator= (const ReconnectionCallback &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_ReconnectionCallback;
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:644

#if !defined (_NOTIFYEXT_RECONNECTIONREGISTRY__VAR_OUT_CH_)
#define _NOTIFYEXT_RECONNECTIONREGISTRY__VAR_OUT_CH_
  
  class ReconnectionRegistry;
  typedef ReconnectionRegistry *ReconnectionRegistry_ptr;
  
  typedef
    TAO_Objref_Var_T<
        ReconnectionRegistry
      >
    ReconnectionRegistry_var;
  
  typedef
    TAO_Objref_Out_T<
        ReconnectionRegistry
      >
    ReconnectionRegistry_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_NOTIFYEXT_RECONNECTIONREGISTRY_CH_)
#define _NOTIFYEXT_RECONNECTIONREGISTRY_CH_
  
  class TAO_Notify_Export ReconnectionRegistry
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<ReconnectionRegistry>;
    typedef ReconnectionRegistry_ptr _ptr_type;
    typedef ReconnectionRegistry_var _var_type;
    typedef ReconnectionRegistry_out _out_type;
    
    // The static operations.
    static ReconnectionRegistry_ptr _duplicate (ReconnectionRegistry_ptr obj);
    
    static void _tao_release (ReconnectionRegistry_ptr obj);
    
    static ReconnectionRegistry_ptr _narrow (::CORBA::Object_ptr obj);
    static ReconnectionRegistry_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ReconnectionRegistry_ptr _nil (void)
    {
      return static_cast<ReconnectionRegistry_ptr> (0);
    }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:379
    
    typedef ::CORBA::Long ReconnectionID;
    typedef ::CORBA::Long_out ReconnectionID_out;
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
    
    static ::CORBA::TypeCode_ptr const _tc_ReconnectionID;
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::NotifyExt::ReconnectionRegistry::ReconnectionID register_callback (
        ::NotifyExt::ReconnectionCallback_ptr reconection);
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void unregister_callback (
        ::NotifyExt::ReconnectionRegistry::ReconnectionID id);
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::Boolean is_alive (
        void);
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:216
    
    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_ReconnectionRegistry_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    ReconnectionRegistry (void);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void NotifyExt_ReconnectionRegistry_setup_collocation (void);
    
    // Concrete non-local interface only.
    ReconnectionRegistry (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ReconnectionRegistry (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);
    
    virtual ~ReconnectionRegistry (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ReconnectionRegistry (const ReconnectionRegistry &);
    
    void operator= (const ReconnectionRegistry &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_ReconnectionRegistry;
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:644

#if !defined (_NOTIFYEXT_EVENTCHANNELFACTORY__VAR_OUT_CH_)
#define _NOTIFYEXT_EVENTCHANNELFACTORY__VAR_OUT_CH_
  
  class EventChannelFactory;
  typedef EventChannelFactory *EventChannelFactory_ptr;
  
  typedef
    TAO_Objref_Var_T<
        EventChannelFactory
      >
    EventChannelFactory_var;
  
  typedef
    TAO_Objref_Out_T<
        EventChannelFactory
      >
    EventChannelFactory_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_NOTIFYEXT_EVENTCHANNELFACTORY_CH_)
#define _NOTIFYEXT_EVENTCHANNELFACTORY_CH_
  
  class TAO_Notify_Export EventChannelFactory
    : public virtual ::CosNotifyChannelAdmin::EventChannelFactory,
      public virtual ::NotifyExt::ReconnectionRegistry
  {
  public:
    friend class TAO::Narrow_Utils<EventChannelFactory>;
    typedef EventChannelFactory_ptr _ptr_type;
    typedef EventChannelFactory_var _var_type;
    typedef EventChannelFactory_out _out_type;
    
    // The static operations.
    static EventChannelFactory_ptr _duplicate (EventChannelFactory_ptr obj);
    
    static void _tao_release (EventChannelFactory_ptr obj);
    
    static EventChannelFactory_ptr _narrow (::CORBA::Object_ptr obj);
    static EventChannelFactory_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static EventChannelFactory_ptr _nil (void)
    {
      return static_cast<EventChannelFactory_ptr> (0);
    }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void destroy (
        void);
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void save_topology (
        void);
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:216
    
    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_EventChannelFactory_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    EventChannelFactory (void);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void NotifyExt_EventChannelFactory_setup_collocation (void);
    
    // Concrete non-local interface only.
    EventChannelFactory (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    EventChannelFactory (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);
    
    virtual ~EventChannelFactory (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    EventChannelFactory (const EventChannelFactory &);
    
    void operator= (const EventChannelFactory &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_EventChannelFactory;
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:644

#if !defined (_NOTIFYEXT_CONSUMERADMIN__VAR_OUT_CH_)
#define _NOTIFYEXT_CONSUMERADMIN__VAR_OUT_CH_
  
  class ConsumerAdmin;
  typedef ConsumerAdmin *ConsumerAdmin_ptr;
  
  typedef
    TAO_Objref_Var_T<
        ConsumerAdmin
      >
    ConsumerAdmin_var;
  
  typedef
    TAO_Objref_Out_T<
        ConsumerAdmin
      >
    ConsumerAdmin_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_NOTIFYEXT_CONSUMERADMIN_CH_)
#define _NOTIFYEXT_CONSUMERADMIN_CH_
  
  class TAO_Notify_Export ConsumerAdmin
    : public virtual ::CosNotifyChannelAdmin::ConsumerAdmin
  {
  public:
    friend class TAO::Narrow_Utils<ConsumerAdmin>;
    typedef ConsumerAdmin_ptr _ptr_type;
    typedef ConsumerAdmin_var _var_type;
    typedef ConsumerAdmin_out _out_type;
    
    // The static operations.
    static ConsumerAdmin_ptr _duplicate (ConsumerAdmin_ptr obj);
    
    static void _tao_release (ConsumerAdmin_ptr obj);
    
    static ConsumerAdmin_ptr _narrow (::CORBA::Object_ptr obj);
    static ConsumerAdmin_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ConsumerAdmin_ptr _nil (void)
    {
      return static_cast<ConsumerAdmin_ptr> (0);
    }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CosNotifyChannelAdmin::ProxySupplier_ptr obtain_notification_push_supplier_with_qos (
        ::CosNotifyChannelAdmin::ClientType ctype,
        ::CosNotifyChannelAdmin::ProxyID_out proxy_id,
        const ::CosNotification::QoSProperties & initial_qos);
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:216
    
    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_ConsumerAdmin_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    ConsumerAdmin (void);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void NotifyExt_ConsumerAdmin_setup_collocation (void);
    
    // Concrete non-local interface only.
    ConsumerAdmin (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ConsumerAdmin (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);
    
    virtual ~ConsumerAdmin (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ConsumerAdmin (const ConsumerAdmin &);
    
    void operator= (const ConsumerAdmin &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_ConsumerAdmin;
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:644

#if !defined (_NOTIFYEXT_SUPPLIERADMIN__VAR_OUT_CH_)
#define _NOTIFYEXT_SUPPLIERADMIN__VAR_OUT_CH_
  
  class SupplierAdmin;
  typedef SupplierAdmin *SupplierAdmin_ptr;
  
  typedef
    TAO_Objref_Var_T<
        SupplierAdmin
      >
    SupplierAdmin_var;
  
  typedef
    TAO_Objref_Out_T<
        SupplierAdmin
      >
    SupplierAdmin_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_NOTIFYEXT_SUPPLIERADMIN_CH_)
#define _NOTIFYEXT_SUPPLIERADMIN_CH_
  
  class TAO_Notify_Export SupplierAdmin
    : public virtual ::CosNotifyChannelAdmin::SupplierAdmin
  {
  public:
    friend class TAO::Narrow_Utils<SupplierAdmin>;
    typedef SupplierAdmin_ptr _ptr_type;
    typedef SupplierAdmin_var _var_type;
    typedef SupplierAdmin_out _out_type;
    
    // The static operations.
    static SupplierAdmin_ptr _duplicate (SupplierAdmin_ptr obj);
    
    static void _tao_release (SupplierAdmin_ptr obj);
    
    static SupplierAdmin_ptr _narrow (::CORBA::Object_ptr obj);
    static SupplierAdmin_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static SupplierAdmin_ptr _nil (void)
    {
      return static_cast<SupplierAdmin_ptr> (0);
    }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CosNotifyChannelAdmin::ProxyConsumer_ptr obtain_notification_push_consumer_with_qos (
        ::CosNotifyChannelAdmin::ClientType ctype,
        ::CosNotifyChannelAdmin::ProxyID_out proxy_id,
        const ::CosNotification::QoSProperties & initial_qos);
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:216
    
    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_SupplierAdmin_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    SupplierAdmin (void);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void NotifyExt_SupplierAdmin_setup_collocation (void);
    
    // Concrete non-local interface only.
    SupplierAdmin (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    SupplierAdmin (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);
    
    virtual ~SupplierAdmin (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    SupplierAdmin (const SupplierAdmin &);
    
    void operator= (const SupplierAdmin &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_Notify_Export ::CORBA::TypeCode_ptr const _tc_SupplierAdmin;

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_module/module_ch.cpp:78

} // module NotifyExt

// Proxy Broker Factory function pointer declarations.

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_root/root.cpp:139

extern TAO_Notify_Export
TAO::Collocation_Proxy_Broker *
(*NotifyExt__TAO_ReconnectionCallback_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj
  );

extern TAO_Notify_Export
TAO::Collocation_Proxy_Broker *
(*NotifyExt__TAO_ReconnectionRegistry_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj
  );

extern TAO_Notify_Export
TAO::Collocation_Proxy_Broker *
(*NotifyExt__TAO_EventChannelFactory_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj
  );

extern TAO_Notify_Export
TAO::Collocation_Proxy_Broker *
(*NotifyExt__TAO_ConsumerAdmin_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj
  );

extern TAO_Notify_Export
TAO::Collocation_Proxy_Broker *
(*NotifyExt__TAO_SupplierAdmin_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj
  );

// TAO_IDL - Generated from
// be\be_visitor_traits.cpp:64


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_NOTIFYEXT_RECONNECTIONCALLBACK__TRAITS_)
#define _NOTIFYEXT_RECONNECTIONCALLBACK__TRAITS_
  
  template<>
  struct TAO_Notify_Export Objref_Traits< ::NotifyExt::ReconnectionCallback>
  {
    static ::NotifyExt::ReconnectionCallback_ptr duplicate (
        ::NotifyExt::ReconnectionCallback_ptr p
      );
    static void release (
        ::NotifyExt::ReconnectionCallback_ptr p
      );
    static ::NotifyExt::ReconnectionCallback_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::NotifyExt::ReconnectionCallback_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_NOTIFYEXT_RECONNECTIONREGISTRY__TRAITS_)
#define _NOTIFYEXT_RECONNECTIONREGISTRY__TRAITS_
  
  template<>
  struct TAO_Notify_Export Objref_Traits< ::NotifyExt::ReconnectionRegistry>
  {
    static ::NotifyExt::ReconnectionRegistry_ptr duplicate (
        ::NotifyExt::ReconnectionRegistry_ptr p
      );
    static void release (
        ::NotifyExt::ReconnectionRegistry_ptr p
      );
    static ::NotifyExt::ReconnectionRegistry_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::NotifyExt::ReconnectionRegistry_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_NOTIFYEXT_EVENTCHANNELFACTORY__TRAITS_)
#define _NOTIFYEXT_EVENTCHANNELFACTORY__TRAITS_
  
  template<>
  struct TAO_Notify_Export Objref_Traits< ::NotifyExt::EventChannelFactory>
  {
    static ::NotifyExt::EventChannelFactory_ptr duplicate (
        ::NotifyExt::EventChannelFactory_ptr p
      );
    static void release (
        ::NotifyExt::EventChannelFactory_ptr p
      );
    static ::NotifyExt::EventChannelFactory_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::NotifyExt::EventChannelFactory_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_NOTIFYEXT_CONSUMERADMIN__TRAITS_)
#define _NOTIFYEXT_CONSUMERADMIN__TRAITS_
  
  template<>
  struct TAO_Notify_Export Objref_Traits< ::NotifyExt::ConsumerAdmin>
  {
    static ::NotifyExt::ConsumerAdmin_ptr duplicate (
        ::NotifyExt::ConsumerAdmin_ptr p
      );
    static void release (
        ::NotifyExt::ConsumerAdmin_ptr p
      );
    static ::NotifyExt::ConsumerAdmin_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::NotifyExt::ConsumerAdmin_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_NOTIFYEXT_SUPPLIERADMIN__TRAITS_)
#define _NOTIFYEXT_SUPPLIERADMIN__TRAITS_
  
  template<>
  struct TAO_Notify_Export Objref_Traits< ::NotifyExt::SupplierAdmin>
  {
    static ::NotifyExt::SupplierAdmin_ptr duplicate (
        ::NotifyExt::SupplierAdmin_ptr p
      );
    static void release (
        ::NotifyExt::SupplierAdmin_ptr p
      );
    static ::NotifyExt::SupplierAdmin_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::NotifyExt::SupplierAdmin_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_enum/any_op_ch.cpp:52

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export void operator<<= (::CORBA::Any &, NotifyExt::PriorityModel);
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, NotifyExt::PriorityModel &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:53



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, const NotifyExt::ThreadPoolParams &); // copying version
TAO_Notify_Export void operator<<= (::CORBA::Any &, NotifyExt::ThreadPoolParams*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, NotifyExt::ThreadPoolParams *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const NotifyExt::ThreadPoolParams *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:53



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, const NotifyExt::ThreadPoolLane &); // copying version
TAO_Notify_Export void operator<<= (::CORBA::Any &, NotifyExt::ThreadPoolLane*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, NotifyExt::ThreadPoolLane *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const NotifyExt::ThreadPoolLane *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:53



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= ( ::CORBA::Any &, const NotifyExt::ThreadPoolLanes_List &); // copying version
TAO_Notify_Export void operator<<= ( ::CORBA::Any &, NotifyExt::ThreadPoolLanes_List*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, NotifyExt::ThreadPoolLanes_List *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const NotifyExt::ThreadPoolLanes_List *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:53



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, const NotifyExt::ThreadPoolLanesParams &); // copying version
TAO_Notify_Export void operator<<= (::CORBA::Any &, NotifyExt::ThreadPoolLanesParams*); // noncopying version
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, NotifyExt::ThreadPoolLanesParams *&); // deprecated
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const NotifyExt::ThreadPoolLanesParams *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:54



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace NotifyExt
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, ReconnectionCallback_ptr); // copying
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, ReconnectionCallback_ptr *); // non-copying
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ReconnectionCallback_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, NotifyExt::ReconnectionCallback_ptr); // copying
TAO_Notify_Export void operator<<= (::CORBA::Any &, NotifyExt::ReconnectionCallback_ptr *); // non-copying
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, NotifyExt::ReconnectionCallback_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:54



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace NotifyExt
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, ReconnectionRegistry_ptr); // copying
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, ReconnectionRegistry_ptr *); // non-copying
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ReconnectionRegistry_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, NotifyExt::ReconnectionRegistry_ptr); // copying
TAO_Notify_Export void operator<<= (::CORBA::Any &, NotifyExt::ReconnectionRegistry_ptr *); // non-copying
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, NotifyExt::ReconnectionRegistry_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:54



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace NotifyExt
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, EventChannelFactory_ptr); // copying
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, EventChannelFactory_ptr *); // non-copying
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, EventChannelFactory_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, NotifyExt::EventChannelFactory_ptr); // copying
TAO_Notify_Export void operator<<= (::CORBA::Any &, NotifyExt::EventChannelFactory_ptr *); // non-copying
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, NotifyExt::EventChannelFactory_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:54



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace NotifyExt
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, ConsumerAdmin_ptr); // copying
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, ConsumerAdmin_ptr *); // non-copying
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ConsumerAdmin_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, NotifyExt::ConsumerAdmin_ptr); // copying
TAO_Notify_Export void operator<<= (::CORBA::Any &, NotifyExt::ConsumerAdmin_ptr *); // non-copying
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, NotifyExt::ConsumerAdmin_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:54



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace NotifyExt
{
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, SupplierAdmin_ptr); // copying
  TAO_Notify_Export void operator<<= ( ::CORBA::Any &, SupplierAdmin_ptr *); // non-copying
  TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SupplierAdmin_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export void operator<<= (::CORBA::Any &, NotifyExt::SupplierAdmin_ptr); // copying
TAO_Notify_Export void operator<<= (::CORBA::Any &, NotifyExt::SupplierAdmin_ptr *); // non-copying
TAO_Notify_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, NotifyExt::SupplierAdmin_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_enum/cdr_op_ch.cpp:50



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, NotifyExt::PriorityModel _tao_enumerator);
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, NotifyExt::PriorityModel &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:54



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const NotifyExt::ThreadPoolParams &);
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, NotifyExt::ThreadPoolParams &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:54



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const NotifyExt::ThreadPoolLane &);
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, NotifyExt::ThreadPoolLane &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_NotifyExt_ThreadPoolLanes_List_H_
#define _TAO_CDR_OP_NotifyExt_ThreadPoolLanes_List_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Notify_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const NotifyExt::ThreadPoolLanes_List &_tao_sequence
  );
TAO_Notify_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    NotifyExt::ThreadPoolLanes_List &_tao_sequence
  );
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_NotifyExt_ThreadPoolLanes_List_H_ */

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:54



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const NotifyExt::ThreadPoolLanesParams &);
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, NotifyExt::ThreadPoolLanesParams &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:55


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const NotifyExt::ReconnectionCallback_ptr );
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, NotifyExt::ReconnectionCallback_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:55


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const NotifyExt::ReconnectionRegistry_ptr );
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, NotifyExt::ReconnectionRegistry_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:55


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const NotifyExt::EventChannelFactory_ptr );
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, NotifyExt::EventChannelFactory_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:55


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const NotifyExt::ConsumerAdmin_ptr );
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, NotifyExt::ConsumerAdmin_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:55


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Notify_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const NotifyExt::SupplierAdmin_ptr );
TAO_Notify_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, NotifyExt::SupplierAdmin_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be\be_codegen.cpp:1228


TAO_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "NotifyExtC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */


