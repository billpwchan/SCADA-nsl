// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler v1.6a_p10 ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be\be_codegen.cpp:135

#ifndef _TAO_IDL_COSTRADINGREPOSC_H_
#define _TAO_IDL_COSTRADINGREPOSC_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "orbsvcs/Trader/trading_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/UserException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/AnyTypeCode/TypeCode.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/String_Manager_T.h"
#include "tao/AnyTypeCode/BooleanSeqA.h"
#include "tao/AnyTypeCode/CharSeqA.h"
#include "tao/AnyTypeCode/DoubleSeqA.h"
#include "tao/AnyTypeCode/FloatSeqA.h"
#include "tao/AnyTypeCode/LongDoubleSeqA.h"
#include "tao/AnyTypeCode/LongSeqA.h"
#include "tao/AnyTypeCode/OctetSeqA.h"
#include "tao/AnyTypeCode/ShortSeqA.h"
#include "tao/AnyTypeCode/StringSeqA.h"
#include "tao/AnyTypeCode/ULongSeqA.h"
#include "tao/AnyTypeCode/UShortSeqA.h"
#include "tao/AnyTypeCode/WCharSeqA.h"
#include "tao/AnyTypeCode/WStringSeqA.h"
#include "tao/AnyTypeCode/LongLongSeqA.h"
#include "tao/AnyTypeCode/ULongLongSeqA.h"
#include "tao/AnyTypeCode/PolicyA.h"
#include "tao/AnyTypeCode/Policy_ManagerA.h"
#include "tao/AnyTypeCode/Policy_CurrentA.h"
#include "tao/AnyTypeCode/ServicesA.h"
#include "tao/AnyTypeCode/ParameterModeA.h"
#include "tao/AnyTypeCode/orb_typesA.h"
#include "tao/AnyTypeCode/Typecode_typesA.h"
#include "tao/AnyTypeCode/WrongTransactionA.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "tao/BooleanSeqC.h"
#include "tao/CharSeqC.h"
#include "tao/DoubleSeqC.h"
#include "tao/FloatSeqC.h"
#include "tao/LongDoubleSeqC.h"
#include "tao/LongSeqC.h"
#include "tao/OctetSeqC.h"
#include "tao/ShortSeqC.h"
#include "tao/StringSeqC.h"
#include "tao/ULongSeqC.h"
#include "tao/UShortSeqC.h"
#include "tao/WCharSeqC.h"
#include "tao/WStringSeqC.h"
#include "tao/LongLongSeqC.h"
#include "tao/ULongLongSeqC.h"
#include "tao/PolicyC.h"
#include "tao/Policy_ManagerC.h"
#include "tao/Policy_CurrentC.h"
#include "tao/ServicesC.h"
#include "tao/ParameterModeC.h"
#include "tao/orb_typesC.h"
#include "tao/Typecode_typesC.h"
#include "tao/WrongTransactionC.h"
#include "CosTradingC.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_Trading_Export

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from 
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_root/root_ch.cpp:62

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  class Collocation_Proxy_Broker;
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_module/module_ch.cpp:49

namespace CosTradingRepos
{
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:644

#if !defined (_COSTRADINGREPOS_SERVICETYPEREPOSITORY__VAR_OUT_CH_)
#define _COSTRADINGREPOS_SERVICETYPEREPOSITORY__VAR_OUT_CH_
  
  class ServiceTypeRepository;
  typedef ServiceTypeRepository *ServiceTypeRepository_ptr;
  
  typedef
    TAO_Objref_Var_T<
        ServiceTypeRepository
      >
    ServiceTypeRepository_var;
  
  typedef
    TAO_Objref_Out_T<
        ServiceTypeRepository
      >
    ServiceTypeRepository_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_COSTRADINGREPOS_SERVICETYPEREPOSITORY_CH_)
#define _COSTRADINGREPOS_SERVICETYPEREPOSITORY_CH_
  
  class TAO_Trading_Export ServiceTypeRepository
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<ServiceTypeRepository>;
    typedef ServiceTypeRepository_ptr _ptr_type;
    typedef ServiceTypeRepository_var _var_type;
    typedef ServiceTypeRepository_out _out_type;
    
    // The static operations.
    static ServiceTypeRepository_ptr _duplicate (ServiceTypeRepository_ptr obj);
    
    static void _tao_release (ServiceTypeRepository_ptr obj);
    
    static ServiceTypeRepository_ptr _narrow (::CORBA::Object_ptr obj);
    static ServiceTypeRepository_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ServiceTypeRepository_ptr _nil (void)
    {
      return static_cast<ServiceTypeRepository_ptr> (0);
    }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:107

#if !defined (_COSTRADINGREPOS_SERVICETYPEREPOSITORY_SERVICETYPENAMESEQ_CH_)
#define _COSTRADINGREPOS_SERVICETYPEREPOSITORY_SERVICETYPENAMESEQ_CH_
    
    class ServiceTypeNameSeq;
    
    typedef
      TAO_VarSeq_Var_T<
          ServiceTypeNameSeq
        >
      ServiceTypeNameSeq_var;
    
    typedef
      TAO_Seq_Out_T<
          ServiceTypeNameSeq
        >
      ServiceTypeNameSeq_out;
    
    class TAO_Trading_Export ServiceTypeNameSeq
      : public
          TAO::unbounded_basic_string_sequence<char>
    {
    public:
      ServiceTypeNameSeq (void);
      ServiceTypeNameSeq ( ::CORBA::ULong max);
      ServiceTypeNameSeq (
          ::CORBA::ULong max,
          ::CORBA::ULong length,
          ::CORBA::Char ** buffer, 
          ::CORBA::Boolean release = false
        );
      ServiceTypeNameSeq (const ServiceTypeNameSeq &);
      virtual ~ServiceTypeNameSeq (void);
      
      static void _tao_any_destructor (void *);
      
      typedef ServiceTypeNameSeq_var _var_type;
      typedef ServiceTypeNameSeq_out _out_type;
      
      
    };

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
    
    static ::CORBA::TypeCode_ptr const _tc_ServiceTypeNameSeq;
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_enum/enum_ch.cpp:57
    
    enum PropertyMode
    {
      PROP_NORMAL,
      PROP_READONLY,
      PROP_MANDATORY,
      PROP_MANDATORY_READONLY
    };
    
    typedef PropertyMode &PropertyMode_out;
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
    
    static ::CORBA::TypeCode_ptr const _tc_PropertyMode;
    
    // TAO_IDL - Generated from
    // be\be_type.cpp:269
    
    struct PropStruct;
    
    typedef
      TAO_Var_Var_T<
          PropStruct
        >
      PropStruct_var;
    
    typedef
      TAO_Out_T<
          PropStruct
        >
      PropStruct_out;
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:57
    
    struct TAO_Trading_Export PropStruct
    {
      typedef PropStruct_var _var_type;
      typedef PropStruct_out _out_type;
      
      static void _tao_any_destructor (void *);
      TAO::String_Manager name;
      ::CORBA::TypeCode_var value_type;
      CosTradingRepos::ServiceTypeRepository::PropertyMode mode;
    };
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
    
    static ::CORBA::TypeCode_ptr const _tc_PropStruct;
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:107

#if !defined (_COSTRADINGREPOS_SERVICETYPEREPOSITORY_PROPSTRUCTSEQ_CH_)
#define _COSTRADINGREPOS_SERVICETYPEREPOSITORY_PROPSTRUCTSEQ_CH_
    
    class PropStructSeq;
    
    typedef
      TAO_VarSeq_Var_T<
          PropStructSeq
        >
      PropStructSeq_var;
    
    typedef
      TAO_Seq_Out_T<
          PropStructSeq
        >
      PropStructSeq_out;
    
    class TAO_Trading_Export PropStructSeq
      : public
          TAO::unbounded_value_sequence<
              PropStruct
            >
    {
    public:
      PropStructSeq (void);
      PropStructSeq ( ::CORBA::ULong max);
      PropStructSeq (
          ::CORBA::ULong max,
          ::CORBA::ULong length,
          PropStruct* buffer, 
          ::CORBA::Boolean release = false
        );
      PropStructSeq (const PropStructSeq &);
      virtual ~PropStructSeq (void);
      
      static void _tao_any_destructor (void *);
      
      typedef PropStructSeq_var _var_type;
      typedef PropStructSeq_out _out_type;
      
      
    };

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
    
    static ::CORBA::TypeCode_ptr const _tc_PropStructSeq;
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:413
    
    typedef char * Identifier;
    typedef ::CORBA::String_var Identifier_var;
    typedef ::CORBA::String_out Identifier_out;
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
    
    static ::CORBA::TypeCode_ptr const _tc_Identifier;
    
    // TAO_IDL - Generated from
    // be\be_type.cpp:269
    
    struct IncarnationNumber;
    
    typedef
      TAO_Fixed_Var_T<
          IncarnationNumber
        >
      IncarnationNumber_var;
    
    typedef
      IncarnationNumber &
      IncarnationNumber_out;
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:57
    
    struct TAO_Trading_Export IncarnationNumber
    {
      typedef IncarnationNumber_var _var_type;
      typedef IncarnationNumber_out _out_type;
      
      static void _tao_any_destructor (void *);
      ::CORBA::ULong high;
      ::CORBA::ULong low;
    };
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
    
    static ::CORBA::TypeCode_ptr const _tc_IncarnationNumber;
    
    // TAO_IDL - Generated from
    // be\be_type.cpp:269
    
    struct TypeStruct;
    
    typedef
      TAO_Var_Var_T<
          TypeStruct
        >
      TypeStruct_var;
    
    typedef
      TAO_Out_T<
          TypeStruct
        >
      TypeStruct_out;
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:57
    
    struct TAO_Trading_Export TypeStruct
    {
      typedef TypeStruct_var _var_type;
      typedef TypeStruct_out _out_type;
      
      static void _tao_any_destructor (void *);
      TAO::String_Manager if_name;
      CosTradingRepos::ServiceTypeRepository::PropStructSeq props;
      CosTradingRepos::ServiceTypeRepository::ServiceTypeNameSeq super_types;
      ::CORBA::Boolean masked;
      CosTradingRepos::ServiceTypeRepository::IncarnationNumber incarnation;
    };
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
    
    static ::CORBA::TypeCode_ptr const _tc_TypeStruct;
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_enum/enum_ch.cpp:57
    
    enum ListOption
    {
      all,
      since
    };
    
    typedef ListOption &ListOption_out;
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
    
    static ::CORBA::TypeCode_ptr const _tc_ListOption;
    
    // TAO_IDL - Generated from
    // be\be_type.cpp:269
    
    class SpecifiedServiceTypes;
    
    typedef
      TAO_Fixed_Var_T<
          SpecifiedServiceTypes
        >
      SpecifiedServiceTypes_var;
    
    typedef
      SpecifiedServiceTypes &
      SpecifiedServiceTypes_out;

#if !defined (_COSTRADINGREPOS_SERVICETYPEREPOSITORY_SPECIFIEDSERVICETYPES_CH_)
#define _COSTRADINGREPOS_SERVICETYPEREPOSITORY_SPECIFIEDSERVICETYPES_CH_
    
    class TAO_Trading_Export SpecifiedServiceTypes
    {
    public:
      SpecifiedServiceTypes (void);
      SpecifiedServiceTypes (const SpecifiedServiceTypes &);
      ~SpecifiedServiceTypes (void);
      static void _tao_any_destructor (void*);
      
      SpecifiedServiceTypes &operator= (const SpecifiedServiceTypes &);
      
      // TAO_IDL - Generated from
      // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_union/discriminant_ch.cpp:82
      
      void _d (CosTradingRepos::ServiceTypeRepository::ListOption);
      CosTradingRepos::ServiceTypeRepository::ListOption _d (void) const;
      
      // TAO_IDL - Generated from
      // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_union/union_ch.cpp:113
      
      typedef SpecifiedServiceTypes_var _var_type;
      typedef SpecifiedServiceTypes_out _out_type;
      
      // TAO_IDL - Generated from
      // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_union_branch/public_ch.cpp:460
      
      void all_ ( ::CORBA::Boolean);
      ::CORBA::Boolean all_ (void) const;
      
      // TAO_IDL - Generated from
      // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_union_branch/public_ch.cpp:667
      
      void incarnation (const CosTradingRepos::ServiceTypeRepository::IncarnationNumber &);
      const CosTradingRepos::ServiceTypeRepository::IncarnationNumber &incarnation (void) const;
      CosTradingRepos::ServiceTypeRepository::IncarnationNumber &incarnation (void);
    private:
      CosTradingRepos::ServiceTypeRepository::ListOption disc_;
      CosTradingRepos::ServiceTypeRepository::ListOption holder_;
      
      union
      {
        // TAO_IDL - Generated from
        // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_union_branch/private_ch.cpp:388
        ::CORBA::Boolean all__;
        // TAO_IDL - Generated from
        // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_union_branch/private_ch.cpp:530
        CosTradingRepos::ServiceTypeRepository::IncarnationNumber incarnation_;
      } u_;
      
      /// TAO extension - frees any allocated storage.
      void _reset (void);
    };
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
    
    static ::CORBA::TypeCode_ptr const _tc_SpecifiedServiceTypes;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:53

#if !defined (_COSTRADINGREPOS_SERVICETYPEREPOSITORY_SERVICETYPEEXISTS_CH_)
#define _COSTRADINGREPOS_SERVICETYPEREPOSITORY_SERVICETYPEEXISTS_CH_
    
    class TAO_Trading_Export ServiceTypeExists : public ::CORBA::UserException
    {
    public:
      
      TAO::String_Manager name;
      ServiceTypeExists (void);
      ServiceTypeExists (const ServiceTypeExists &);
      ~ServiceTypeExists (void);

      ServiceTypeExists &operator= (const ServiceTypeExists &);
      
      static void _tao_any_destructor (void *);
      
      static ServiceTypeExists *_downcast ( ::CORBA::Exception *);
      static const ServiceTypeExists *_downcast ( ::CORBA::Exception const *);
      
      static ::CORBA::Exception *_alloc (void);
      
      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      
      
      // TAO_IDL - Generated from
      // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/exception_ctor.cpp:66
      
      ServiceTypeExists (
          const char * _tao_name
        );
      
      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
    
    static ::CORBA::TypeCode_ptr const _tc_ServiceTypeExists;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:53

#if !defined (_COSTRADINGREPOS_SERVICETYPEREPOSITORY_INTERFACETYPEMISMATCH_CH_)
#define _COSTRADINGREPOS_SERVICETYPEREPOSITORY_INTERFACETYPEMISMATCH_CH_
    
    class TAO_Trading_Export InterfaceTypeMismatch : public ::CORBA::UserException
    {
    public:
      
      TAO::String_Manager base_service;
      TAO::String_Manager base_if;
      TAO::String_Manager derived_service;
      TAO::String_Manager derived_if;
      InterfaceTypeMismatch (void);
      InterfaceTypeMismatch (const InterfaceTypeMismatch &);
      ~InterfaceTypeMismatch (void);

      InterfaceTypeMismatch &operator= (const InterfaceTypeMismatch &);
      
      static void _tao_any_destructor (void *);
      
      static InterfaceTypeMismatch *_downcast ( ::CORBA::Exception *);
      static const InterfaceTypeMismatch *_downcast ( ::CORBA::Exception const *);
      
      static ::CORBA::Exception *_alloc (void);
      
      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      
      
      // TAO_IDL - Generated from
      // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/exception_ctor.cpp:66
      
      InterfaceTypeMismatch (
          const char * _tao_base_service,
          const char * _tao_base_if,
          const char * _tao_derived_service,
          const char * _tao_derived_if
        );
      
      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
    
    static ::CORBA::TypeCode_ptr const _tc_InterfaceTypeMismatch;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:53

#if !defined (_COSTRADINGREPOS_SERVICETYPEREPOSITORY_HASSUBTYPES_CH_)
#define _COSTRADINGREPOS_SERVICETYPEREPOSITORY_HASSUBTYPES_CH_
    
    class TAO_Trading_Export HasSubTypes : public ::CORBA::UserException
    {
    public:
      
      TAO::String_Manager the_type;
      TAO::String_Manager sub_type;
      HasSubTypes (void);
      HasSubTypes (const HasSubTypes &);
      ~HasSubTypes (void);

      HasSubTypes &operator= (const HasSubTypes &);
      
      static void _tao_any_destructor (void *);
      
      static HasSubTypes *_downcast ( ::CORBA::Exception *);
      static const HasSubTypes *_downcast ( ::CORBA::Exception const *);
      
      static ::CORBA::Exception *_alloc (void);
      
      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      
      
      // TAO_IDL - Generated from
      // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/exception_ctor.cpp:66
      
      HasSubTypes (
          const char * _tao_the_type,
          const char * _tao_sub_type
        );
      
      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
    
    static ::CORBA::TypeCode_ptr const _tc_HasSubTypes;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:53

#if !defined (_COSTRADINGREPOS_SERVICETYPEREPOSITORY_ALREADYMASKED_CH_)
#define _COSTRADINGREPOS_SERVICETYPEREPOSITORY_ALREADYMASKED_CH_
    
    class TAO_Trading_Export AlreadyMasked : public ::CORBA::UserException
    {
    public:
      
      TAO::String_Manager name;
      AlreadyMasked (void);
      AlreadyMasked (const AlreadyMasked &);
      ~AlreadyMasked (void);

      AlreadyMasked &operator= (const AlreadyMasked &);
      
      static void _tao_any_destructor (void *);
      
      static AlreadyMasked *_downcast ( ::CORBA::Exception *);
      static const AlreadyMasked *_downcast ( ::CORBA::Exception const *);
      
      static ::CORBA::Exception *_alloc (void);
      
      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      
      
      // TAO_IDL - Generated from
      // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/exception_ctor.cpp:66
      
      AlreadyMasked (
          const char * _tao_name
        );
      
      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
    
    static ::CORBA::TypeCode_ptr const _tc_AlreadyMasked;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:53

#if !defined (_COSTRADINGREPOS_SERVICETYPEREPOSITORY_NOTMASKED_CH_)
#define _COSTRADINGREPOS_SERVICETYPEREPOSITORY_NOTMASKED_CH_
    
    class TAO_Trading_Export NotMasked : public ::CORBA::UserException
    {
    public:
      
      TAO::String_Manager name;
      NotMasked (void);
      NotMasked (const NotMasked &);
      ~NotMasked (void);

      NotMasked &operator= (const NotMasked &);
      
      static void _tao_any_destructor (void *);
      
      static NotMasked *_downcast ( ::CORBA::Exception *);
      static const NotMasked *_downcast ( ::CORBA::Exception const *);
      
      static ::CORBA::Exception *_alloc (void);
      
      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      
      
      // TAO_IDL - Generated from
      // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/exception_ctor.cpp:66
      
      NotMasked (
          const char * _tao_name
        );
      
      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
    
    static ::CORBA::TypeCode_ptr const _tc_NotMasked;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:53

#if !defined (_COSTRADINGREPOS_SERVICETYPEREPOSITORY_VALUETYPEREDEFINITION_CH_)
#define _COSTRADINGREPOS_SERVICETYPEREPOSITORY_VALUETYPEREDEFINITION_CH_
    
    class TAO_Trading_Export ValueTypeRedefinition : public ::CORBA::UserException
    {
    public:
      
      TAO::String_Manager type_1;
      CosTradingRepos::ServiceTypeRepository::PropStruct definition_1;
      TAO::String_Manager type_2;
      CosTradingRepos::ServiceTypeRepository::PropStruct definition_2;
      ValueTypeRedefinition (void);
      ValueTypeRedefinition (const ValueTypeRedefinition &);
      ~ValueTypeRedefinition (void);

      ValueTypeRedefinition &operator= (const ValueTypeRedefinition &);
      
      static void _tao_any_destructor (void *);
      
      static ValueTypeRedefinition *_downcast ( ::CORBA::Exception *);
      static const ValueTypeRedefinition *_downcast ( ::CORBA::Exception const *);
      
      static ::CORBA::Exception *_alloc (void);
      
      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      
      
      // TAO_IDL - Generated from
      // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/exception_ctor.cpp:66
      
      ValueTypeRedefinition (
          const char * _tao_type_1,
          const CosTradingRepos::ServiceTypeRepository::PropStruct & _tao_definition_1,
          const char * _tao_type_2,
          const CosTradingRepos::ServiceTypeRepository::PropStruct & _tao_definition_2
        );
      
      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
    
    static ::CORBA::TypeCode_ptr const _tc_ValueTypeRedefinition;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:53

#if !defined (_COSTRADINGREPOS_SERVICETYPEREPOSITORY_DUPLICATESERVICETYPENAME_CH_)
#define _COSTRADINGREPOS_SERVICETYPEREPOSITORY_DUPLICATESERVICETYPENAME_CH_
    
    class TAO_Trading_Export DuplicateServiceTypeName : public ::CORBA::UserException
    {
    public:
      
      TAO::String_Manager name;
      DuplicateServiceTypeName (void);
      DuplicateServiceTypeName (const DuplicateServiceTypeName &);
      ~DuplicateServiceTypeName (void);

      DuplicateServiceTypeName &operator= (const DuplicateServiceTypeName &);
      
      static void _tao_any_destructor (void *);
      
      static DuplicateServiceTypeName *_downcast ( ::CORBA::Exception *);
      static const DuplicateServiceTypeName *_downcast ( ::CORBA::Exception const *);
      
      static ::CORBA::Exception *_alloc (void);
      
      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      
      
      // TAO_IDL - Generated from
      // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/exception_ctor.cpp:66
      
      DuplicateServiceTypeName (
          const char * _tao_name
        );
      
      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
    
    static ::CORBA::TypeCode_ptr const _tc_DuplicateServiceTypeName;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CosTradingRepos::ServiceTypeRepository::IncarnationNumber incarnation (
        void);
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CosTradingRepos::ServiceTypeRepository::IncarnationNumber add_type (
        const char * name,
        const char * if_name,
        const ::CosTradingRepos::ServiceTypeRepository::PropStructSeq & props,
        const ::CosTradingRepos::ServiceTypeRepository::ServiceTypeNameSeq & super_types);
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void remove_type (
        const char * name);
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CosTradingRepos::ServiceTypeRepository::ServiceTypeNameSeq * list_types (
        const ::CosTradingRepos::ServiceTypeRepository::SpecifiedServiceTypes & which_types);
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CosTradingRepos::ServiceTypeRepository::TypeStruct * describe_type (
        const char * name);
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CosTradingRepos::ServiceTypeRepository::TypeStruct * fully_describe_type (
        const char * name);
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void mask_type (
        const char * name);
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void unmask_type (
        const char * name);
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:216
    
    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_ServiceTypeRepository_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    ServiceTypeRepository (void);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosTradingRepos_ServiceTypeRepository_setup_collocation (void);
    
    // Concrete non-local interface only.
    ServiceTypeRepository (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ServiceTypeRepository (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);
    
    virtual ~ServiceTypeRepository (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ServiceTypeRepository (const ServiceTypeRepository &);
    
    void operator= (const ServiceTypeRepository &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_Trading_Export ::CORBA::TypeCode_ptr const _tc_ServiceTypeRepository;

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_module/module_ch.cpp:78

} // module CosTradingRepos

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_module/module_ch.cpp:49

namespace CosTradingSequences
{
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:107

#if !defined (_COSTRADINGSEQUENCES_SHORTSEQ_CH_)
#define _COSTRADINGSEQUENCES_SHORTSEQ_CH_
  
  class ShortSeq;
  
  typedef
    TAO_FixedSeq_Var_T<
        ShortSeq
      >
    ShortSeq_var;
  
  typedef
    TAO_Seq_Out_T<
        ShortSeq
      >
    ShortSeq_out;
  
  class TAO_Trading_Export ShortSeq
    : public
        TAO::unbounded_value_sequence<
            ::CORBA::Short
          >
  {
  public:
    ShortSeq (void);
    ShortSeq ( ::CORBA::ULong max);
    ShortSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ::CORBA::Short* buffer, 
        ::CORBA::Boolean release = false
      );
    ShortSeq (const ShortSeq &);
    virtual ~ShortSeq (void);
    
    static void _tao_any_destructor (void *);
    
    typedef ShortSeq_var _var_type;
    typedef ShortSeq_out _out_type;
    
    
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_Trading_Export ::CORBA::TypeCode_ptr const _tc_ShortSeq;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:107

#if !defined (_COSTRADINGSEQUENCES_USHORTSEQ_CH_)
#define _COSTRADINGSEQUENCES_USHORTSEQ_CH_
  
  class UShortSeq;
  
  typedef
    TAO_FixedSeq_Var_T<
        UShortSeq
      >
    UShortSeq_var;
  
  typedef
    TAO_Seq_Out_T<
        UShortSeq
      >
    UShortSeq_out;
  
  class TAO_Trading_Export UShortSeq
    : public
        TAO::unbounded_value_sequence<
            ::CORBA::UShort
          >
  {
  public:
    UShortSeq (void);
    UShortSeq ( ::CORBA::ULong max);
    UShortSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ::CORBA::UShort* buffer, 
        ::CORBA::Boolean release = false
      );
    UShortSeq (const UShortSeq &);
    virtual ~UShortSeq (void);
    
    static void _tao_any_destructor (void *);
    
    typedef UShortSeq_var _var_type;
    typedef UShortSeq_out _out_type;
    
    
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_Trading_Export ::CORBA::TypeCode_ptr const _tc_UShortSeq;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:107

#if !defined (_COSTRADINGSEQUENCES_LONGSEQ_CH_)
#define _COSTRADINGSEQUENCES_LONGSEQ_CH_
  
  class LongSeq;
  
  typedef
    TAO_FixedSeq_Var_T<
        LongSeq
      >
    LongSeq_var;
  
  typedef
    TAO_Seq_Out_T<
        LongSeq
      >
    LongSeq_out;
  
  class TAO_Trading_Export LongSeq
    : public
        TAO::unbounded_value_sequence<
            ::CORBA::Long
          >
  {
  public:
    LongSeq (void);
    LongSeq ( ::CORBA::ULong max);
    LongSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ::CORBA::Long* buffer, 
        ::CORBA::Boolean release = false
      );
    LongSeq (const LongSeq &);
    virtual ~LongSeq (void);
    
    static void _tao_any_destructor (void *);
    
    typedef LongSeq_var _var_type;
    typedef LongSeq_out _out_type;
    
    
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_Trading_Export ::CORBA::TypeCode_ptr const _tc_LongSeq;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:107

#if !defined (_COSTRADINGSEQUENCES_ULONGSEQ_CH_)
#define _COSTRADINGSEQUENCES_ULONGSEQ_CH_
  
  class ULongSeq;
  
  typedef
    TAO_FixedSeq_Var_T<
        ULongSeq
      >
    ULongSeq_var;
  
  typedef
    TAO_Seq_Out_T<
        ULongSeq
      >
    ULongSeq_out;
  
  class TAO_Trading_Export ULongSeq
    : public
        TAO::unbounded_value_sequence<
            ::CORBA::ULong
          >
  {
  public:
    ULongSeq (void);
    ULongSeq ( ::CORBA::ULong max);
    ULongSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ::CORBA::ULong* buffer, 
        ::CORBA::Boolean release = false
      );
    ULongSeq (const ULongSeq &);
    virtual ~ULongSeq (void);
    
    static void _tao_any_destructor (void *);
    
    typedef ULongSeq_var _var_type;
    typedef ULongSeq_out _out_type;
    
    
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_Trading_Export ::CORBA::TypeCode_ptr const _tc_ULongSeq;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:107

#if !defined (_COSTRADINGSEQUENCES_BOOLEANSEQ_CH_)
#define _COSTRADINGSEQUENCES_BOOLEANSEQ_CH_
  
  class BooleanSeq;
  
  typedef
    TAO_FixedSeq_Var_T<
        BooleanSeq
      >
    BooleanSeq_var;
  
  typedef
    TAO_Seq_Out_T<
        BooleanSeq
      >
    BooleanSeq_out;
  
  class TAO_Trading_Export BooleanSeq
    : public
        TAO::unbounded_value_sequence<
            ::CORBA::Boolean
          >
  {
  public:
    BooleanSeq (void);
    BooleanSeq ( ::CORBA::ULong max);
    BooleanSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ::CORBA::Boolean* buffer, 
        ::CORBA::Boolean release = false
      );
    BooleanSeq (const BooleanSeq &);
    virtual ~BooleanSeq (void);
    
    static void _tao_any_destructor (void *);
    
    typedef BooleanSeq_var _var_type;
    typedef BooleanSeq_out _out_type;
    
    
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_Trading_Export ::CORBA::TypeCode_ptr const _tc_BooleanSeq;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:107

#if !defined (_COSTRADINGSEQUENCES_FLOATSEQ_CH_)
#define _COSTRADINGSEQUENCES_FLOATSEQ_CH_
  
  class FloatSeq;
  
  typedef
    TAO_FixedSeq_Var_T<
        FloatSeq
      >
    FloatSeq_var;
  
  typedef
    TAO_Seq_Out_T<
        FloatSeq
      >
    FloatSeq_out;
  
  class TAO_Trading_Export FloatSeq
    : public
        TAO::unbounded_value_sequence<
            ::CORBA::Float
          >
  {
  public:
    FloatSeq (void);
    FloatSeq ( ::CORBA::ULong max);
    FloatSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ::CORBA::Float* buffer, 
        ::CORBA::Boolean release = false
      );
    FloatSeq (const FloatSeq &);
    virtual ~FloatSeq (void);
    
    static void _tao_any_destructor (void *);
    
    typedef FloatSeq_var _var_type;
    typedef FloatSeq_out _out_type;
    
    
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_Trading_Export ::CORBA::TypeCode_ptr const _tc_FloatSeq;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:107

#if !defined (_COSTRADINGSEQUENCES_DOUBLESEQ_CH_)
#define _COSTRADINGSEQUENCES_DOUBLESEQ_CH_
  
  class DoubleSeq;
  
  typedef
    TAO_FixedSeq_Var_T<
        DoubleSeq
      >
    DoubleSeq_var;
  
  typedef
    TAO_Seq_Out_T<
        DoubleSeq
      >
    DoubleSeq_out;
  
  class TAO_Trading_Export DoubleSeq
    : public
        TAO::unbounded_value_sequence<
            ::CORBA::Double
          >
  {
  public:
    DoubleSeq (void);
    DoubleSeq ( ::CORBA::ULong max);
    DoubleSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ::CORBA::Double* buffer, 
        ::CORBA::Boolean release = false
      );
    DoubleSeq (const DoubleSeq &);
    virtual ~DoubleSeq (void);
    
    static void _tao_any_destructor (void *);
    
    typedef DoubleSeq_var _var_type;
    typedef DoubleSeq_out _out_type;
    
    
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_Trading_Export ::CORBA::TypeCode_ptr const _tc_DoubleSeq;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:107

#if !defined (_COSTRADINGSEQUENCES_STRINGSEQ_CH_)
#define _COSTRADINGSEQUENCES_STRINGSEQ_CH_
  
  class StringSeq;
  
  typedef
    TAO_VarSeq_Var_T<
        StringSeq
      >
    StringSeq_var;
  
  typedef
    TAO_Seq_Out_T<
        StringSeq
      >
    StringSeq_out;
  
  class TAO_Trading_Export StringSeq
    : public
        TAO::unbounded_basic_string_sequence<char>
  {
  public:
    StringSeq (void);
    StringSeq ( ::CORBA::ULong max);
    StringSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ::CORBA::Char ** buffer, 
        ::CORBA::Boolean release = false
      );
    StringSeq (const StringSeq &);
    virtual ~StringSeq (void);
    
    static void _tao_any_destructor (void *);
    
    typedef StringSeq_var _var_type;
    typedef StringSeq_out _out_type;
    
    
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_Trading_Export ::CORBA::TypeCode_ptr const _tc_StringSeq;

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_module/module_ch.cpp:78

} // module CosTradingSequences

// Proxy Broker Factory function pointer declarations.

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_root/root.cpp:139

extern TAO_Trading_Export
TAO::Collocation_Proxy_Broker *
(*CosTradingRepos__TAO_ServiceTypeRepository_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj
  );

// TAO_IDL - Generated from
// be\be_visitor_traits.cpp:64


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_COSTRADINGREPOS_SERVICETYPEREPOSITORY__TRAITS_)
#define _COSTRADINGREPOS_SERVICETYPEREPOSITORY__TRAITS_
  
  template<>
  struct TAO_Trading_Export Objref_Traits< ::CosTradingRepos::ServiceTypeRepository>
  {
    static ::CosTradingRepos::ServiceTypeRepository_ptr duplicate (
        ::CosTradingRepos::ServiceTypeRepository_ptr p
      );
    static void release (
        ::CosTradingRepos::ServiceTypeRepository_ptr p
      );
    static ::CosTradingRepos::ServiceTypeRepository_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosTradingRepos::ServiceTypeRepository_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:54



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosTradingRepos
{
  TAO_Trading_Export void operator<<= ( ::CORBA::Any &, ServiceTypeRepository_ptr); // copying
  TAO_Trading_Export void operator<<= ( ::CORBA::Any &, ServiceTypeRepository_ptr *); // non-copying
  TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ServiceTypeRepository_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Trading_Export void operator<<= (::CORBA::Any &, CosTradingRepos::ServiceTypeRepository_ptr); // copying
TAO_Trading_Export void operator<<= (::CORBA::Any &, CosTradingRepos::ServiceTypeRepository_ptr *); // non-copying
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTradingRepos::ServiceTypeRepository_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:53



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Trading_Export void operator<<= ( ::CORBA::Any &, const CosTradingRepos::ServiceTypeRepository::ServiceTypeNameSeq &); // copying version
TAO_Trading_Export void operator<<= ( ::CORBA::Any &, CosTradingRepos::ServiceTypeRepository::ServiceTypeNameSeq*); // noncopying version
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTradingRepos::ServiceTypeRepository::ServiceTypeNameSeq *&); // deprecated
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosTradingRepos::ServiceTypeRepository::ServiceTypeNameSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_enum/any_op_ch.cpp:52

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Trading_Export void operator<<= (::CORBA::Any &, CosTradingRepos::ServiceTypeRepository::PropertyMode);
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTradingRepos::ServiceTypeRepository::PropertyMode &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:53



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Trading_Export void operator<<= (::CORBA::Any &, const CosTradingRepos::ServiceTypeRepository::PropStruct &); // copying version
TAO_Trading_Export void operator<<= (::CORBA::Any &, CosTradingRepos::ServiceTypeRepository::PropStruct*); // noncopying version
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTradingRepos::ServiceTypeRepository::PropStruct *&); // deprecated
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosTradingRepos::ServiceTypeRepository::PropStruct *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:53



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Trading_Export void operator<<= ( ::CORBA::Any &, const CosTradingRepos::ServiceTypeRepository::PropStructSeq &); // copying version
TAO_Trading_Export void operator<<= ( ::CORBA::Any &, CosTradingRepos::ServiceTypeRepository::PropStructSeq*); // noncopying version
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTradingRepos::ServiceTypeRepository::PropStructSeq *&); // deprecated
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosTradingRepos::ServiceTypeRepository::PropStructSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:53



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Trading_Export void operator<<= (::CORBA::Any &, const CosTradingRepos::ServiceTypeRepository::IncarnationNumber &); // copying version
TAO_Trading_Export void operator<<= (::CORBA::Any &, CosTradingRepos::ServiceTypeRepository::IncarnationNumber*); // noncopying version
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTradingRepos::ServiceTypeRepository::IncarnationNumber *&); // deprecated
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosTradingRepos::ServiceTypeRepository::IncarnationNumber *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:53



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Trading_Export void operator<<= (::CORBA::Any &, const CosTradingRepos::ServiceTypeRepository::TypeStruct &); // copying version
TAO_Trading_Export void operator<<= (::CORBA::Any &, CosTradingRepos::ServiceTypeRepository::TypeStruct*); // noncopying version
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTradingRepos::ServiceTypeRepository::TypeStruct *&); // deprecated
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosTradingRepos::ServiceTypeRepository::TypeStruct *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_enum/any_op_ch.cpp:52

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Trading_Export void operator<<= (::CORBA::Any &, CosTradingRepos::ServiceTypeRepository::ListOption);
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTradingRepos::ServiceTypeRepository::ListOption &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_union/any_op_ch.cpp:53



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Trading_Export void operator<<= (::CORBA::Any &, const CosTradingRepos::ServiceTypeRepository::SpecifiedServiceTypes &); // copying version
TAO_Trading_Export void operator<<= (::CORBA::Any &, CosTradingRepos::ServiceTypeRepository::SpecifiedServiceTypes*); // noncopying version
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTradingRepos::ServiceTypeRepository::SpecifiedServiceTypes *&); // deprecated
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosTradingRepos::ServiceTypeRepository::SpecifiedServiceTypes *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:53

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Trading_Export void operator<<= (::CORBA::Any &, const CosTradingRepos::ServiceTypeRepository::ServiceTypeExists &); // copying version
TAO_Trading_Export void operator<<= (::CORBA::Any &, CosTradingRepos::ServiceTypeRepository::ServiceTypeExists*); // noncopying version
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTradingRepos::ServiceTypeRepository::ServiceTypeExists *&); // deprecated
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosTradingRepos::ServiceTypeRepository::ServiceTypeExists *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:53

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Trading_Export void operator<<= (::CORBA::Any &, const CosTradingRepos::ServiceTypeRepository::InterfaceTypeMismatch &); // copying version
TAO_Trading_Export void operator<<= (::CORBA::Any &, CosTradingRepos::ServiceTypeRepository::InterfaceTypeMismatch*); // noncopying version
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTradingRepos::ServiceTypeRepository::InterfaceTypeMismatch *&); // deprecated
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosTradingRepos::ServiceTypeRepository::InterfaceTypeMismatch *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:53

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Trading_Export void operator<<= (::CORBA::Any &, const CosTradingRepos::ServiceTypeRepository::HasSubTypes &); // copying version
TAO_Trading_Export void operator<<= (::CORBA::Any &, CosTradingRepos::ServiceTypeRepository::HasSubTypes*); // noncopying version
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTradingRepos::ServiceTypeRepository::HasSubTypes *&); // deprecated
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosTradingRepos::ServiceTypeRepository::HasSubTypes *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:53

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Trading_Export void operator<<= (::CORBA::Any &, const CosTradingRepos::ServiceTypeRepository::AlreadyMasked &); // copying version
TAO_Trading_Export void operator<<= (::CORBA::Any &, CosTradingRepos::ServiceTypeRepository::AlreadyMasked*); // noncopying version
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTradingRepos::ServiceTypeRepository::AlreadyMasked *&); // deprecated
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosTradingRepos::ServiceTypeRepository::AlreadyMasked *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:53

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Trading_Export void operator<<= (::CORBA::Any &, const CosTradingRepos::ServiceTypeRepository::NotMasked &); // copying version
TAO_Trading_Export void operator<<= (::CORBA::Any &, CosTradingRepos::ServiceTypeRepository::NotMasked*); // noncopying version
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTradingRepos::ServiceTypeRepository::NotMasked *&); // deprecated
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosTradingRepos::ServiceTypeRepository::NotMasked *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:53

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Trading_Export void operator<<= (::CORBA::Any &, const CosTradingRepos::ServiceTypeRepository::ValueTypeRedefinition &); // copying version
TAO_Trading_Export void operator<<= (::CORBA::Any &, CosTradingRepos::ServiceTypeRepository::ValueTypeRedefinition*); // noncopying version
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTradingRepos::ServiceTypeRepository::ValueTypeRedefinition *&); // deprecated
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosTradingRepos::ServiceTypeRepository::ValueTypeRedefinition *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:53

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Trading_Export void operator<<= (::CORBA::Any &, const CosTradingRepos::ServiceTypeRepository::DuplicateServiceTypeName &); // copying version
TAO_Trading_Export void operator<<= (::CORBA::Any &, CosTradingRepos::ServiceTypeRepository::DuplicateServiceTypeName*); // noncopying version
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTradingRepos::ServiceTypeRepository::DuplicateServiceTypeName *&); // deprecated
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosTradingRepos::ServiceTypeRepository::DuplicateServiceTypeName *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:53



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Trading_Export void operator<<= ( ::CORBA::Any &, const CosTradingSequences::ShortSeq &); // copying version
TAO_Trading_Export void operator<<= ( ::CORBA::Any &, CosTradingSequences::ShortSeq*); // noncopying version
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTradingSequences::ShortSeq *&); // deprecated
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosTradingSequences::ShortSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:53



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Trading_Export void operator<<= ( ::CORBA::Any &, const CosTradingSequences::UShortSeq &); // copying version
TAO_Trading_Export void operator<<= ( ::CORBA::Any &, CosTradingSequences::UShortSeq*); // noncopying version
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTradingSequences::UShortSeq *&); // deprecated
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosTradingSequences::UShortSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:53



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Trading_Export void operator<<= ( ::CORBA::Any &, const CosTradingSequences::LongSeq &); // copying version
TAO_Trading_Export void operator<<= ( ::CORBA::Any &, CosTradingSequences::LongSeq*); // noncopying version
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTradingSequences::LongSeq *&); // deprecated
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosTradingSequences::LongSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:53



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Trading_Export void operator<<= ( ::CORBA::Any &, const CosTradingSequences::ULongSeq &); // copying version
TAO_Trading_Export void operator<<= ( ::CORBA::Any &, CosTradingSequences::ULongSeq*); // noncopying version
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTradingSequences::ULongSeq *&); // deprecated
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosTradingSequences::ULongSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:53



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Trading_Export void operator<<= ( ::CORBA::Any &, const CosTradingSequences::BooleanSeq &); // copying version
TAO_Trading_Export void operator<<= ( ::CORBA::Any &, CosTradingSequences::BooleanSeq*); // noncopying version
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTradingSequences::BooleanSeq *&); // deprecated
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosTradingSequences::BooleanSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:53



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Trading_Export void operator<<= ( ::CORBA::Any &, const CosTradingSequences::FloatSeq &); // copying version
TAO_Trading_Export void operator<<= ( ::CORBA::Any &, CosTradingSequences::FloatSeq*); // noncopying version
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTradingSequences::FloatSeq *&); // deprecated
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosTradingSequences::FloatSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:53



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Trading_Export void operator<<= ( ::CORBA::Any &, const CosTradingSequences::DoubleSeq &); // copying version
TAO_Trading_Export void operator<<= ( ::CORBA::Any &, CosTradingSequences::DoubleSeq*); // noncopying version
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTradingSequences::DoubleSeq *&); // deprecated
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosTradingSequences::DoubleSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:53



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Trading_Export void operator<<= ( ::CORBA::Any &, const CosTradingSequences::StringSeq &); // copying version
TAO_Trading_Export void operator<<= ( ::CORBA::Any &, CosTradingSequences::StringSeq*); // noncopying version
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTradingSequences::StringSeq *&); // deprecated
TAO_Trading_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const CosTradingSequences::StringSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:55


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Trading_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosTradingRepos::ServiceTypeRepository_ptr );
TAO_Trading_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosTradingRepos::ServiceTypeRepository_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CosTradingRepos_ServiceTypeRepository_ServiceTypeNameSeq_H_
#define _TAO_CDR_OP_CosTradingRepos_ServiceTypeRepository_ServiceTypeNameSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Trading_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CosTradingRepos::ServiceTypeRepository::ServiceTypeNameSeq &_tao_sequence
  );
TAO_Trading_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CosTradingRepos::ServiceTypeRepository::ServiceTypeNameSeq &_tao_sequence
  );
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CosTradingRepos_ServiceTypeRepository_ServiceTypeNameSeq_H_ */

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_enum/cdr_op_ch.cpp:50



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Trading_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, CosTradingRepos::ServiceTypeRepository::PropertyMode _tao_enumerator);
TAO_Trading_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, CosTradingRepos::ServiceTypeRepository::PropertyMode &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:54



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Trading_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosTradingRepos::ServiceTypeRepository::PropStruct &);
TAO_Trading_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosTradingRepos::ServiceTypeRepository::PropStruct &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CosTradingRepos_ServiceTypeRepository_PropStructSeq_H_
#define _TAO_CDR_OP_CosTradingRepos_ServiceTypeRepository_PropStructSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Trading_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CosTradingRepos::ServiceTypeRepository::PropStructSeq &_tao_sequence
  );
TAO_Trading_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CosTradingRepos::ServiceTypeRepository::PropStructSeq &_tao_sequence
  );
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CosTradingRepos_ServiceTypeRepository_PropStructSeq_H_ */

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:54



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Trading_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosTradingRepos::ServiceTypeRepository::IncarnationNumber &);
TAO_Trading_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosTradingRepos::ServiceTypeRepository::IncarnationNumber &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:54



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Trading_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosTradingRepos::ServiceTypeRepository::TypeStruct &);
TAO_Trading_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosTradingRepos::ServiceTypeRepository::TypeStruct &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_enum/cdr_op_ch.cpp:50



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Trading_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, CosTradingRepos::ServiceTypeRepository::ListOption _tao_enumerator);
TAO_Trading_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, CosTradingRepos::ServiceTypeRepository::ListOption &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_union/cdr_op_ch.cpp:54



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Trading_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosTradingRepos::ServiceTypeRepository::SpecifiedServiceTypes &);
TAO_Trading_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosTradingRepos::ServiceTypeRepository::SpecifiedServiceTypes &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:52

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Trading_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosTradingRepos::ServiceTypeRepository::ServiceTypeExists &);
TAO_Trading_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosTradingRepos::ServiceTypeRepository::ServiceTypeExists &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:52

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Trading_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosTradingRepos::ServiceTypeRepository::InterfaceTypeMismatch &);
TAO_Trading_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosTradingRepos::ServiceTypeRepository::InterfaceTypeMismatch &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:52

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Trading_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosTradingRepos::ServiceTypeRepository::HasSubTypes &);
TAO_Trading_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosTradingRepos::ServiceTypeRepository::HasSubTypes &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:52

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Trading_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosTradingRepos::ServiceTypeRepository::AlreadyMasked &);
TAO_Trading_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosTradingRepos::ServiceTypeRepository::AlreadyMasked &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:52

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Trading_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosTradingRepos::ServiceTypeRepository::NotMasked &);
TAO_Trading_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosTradingRepos::ServiceTypeRepository::NotMasked &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:52

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Trading_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosTradingRepos::ServiceTypeRepository::ValueTypeRedefinition &);
TAO_Trading_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosTradingRepos::ServiceTypeRepository::ValueTypeRedefinition &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/cdr_op_ch.cpp:52

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Trading_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosTradingRepos::ServiceTypeRepository::DuplicateServiceTypeName &);
TAO_Trading_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosTradingRepos::ServiceTypeRepository::DuplicateServiceTypeName &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CosTradingSequences_ShortSeq_H_
#define _TAO_CDR_OP_CosTradingSequences_ShortSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Trading_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CosTradingSequences::ShortSeq &_tao_sequence
  );
TAO_Trading_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CosTradingSequences::ShortSeq &_tao_sequence
  );
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CosTradingSequences_ShortSeq_H_ */

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CosTradingSequences_UShortSeq_H_
#define _TAO_CDR_OP_CosTradingSequences_UShortSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Trading_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CosTradingSequences::UShortSeq &_tao_sequence
  );
TAO_Trading_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CosTradingSequences::UShortSeq &_tao_sequence
  );
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CosTradingSequences_UShortSeq_H_ */

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CosTradingSequences_LongSeq_H_
#define _TAO_CDR_OP_CosTradingSequences_LongSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Trading_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CosTradingSequences::LongSeq &_tao_sequence
  );
TAO_Trading_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CosTradingSequences::LongSeq &_tao_sequence
  );
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CosTradingSequences_LongSeq_H_ */

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CosTradingSequences_ULongSeq_H_
#define _TAO_CDR_OP_CosTradingSequences_ULongSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Trading_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CosTradingSequences::ULongSeq &_tao_sequence
  );
TAO_Trading_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CosTradingSequences::ULongSeq &_tao_sequence
  );
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CosTradingSequences_ULongSeq_H_ */

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CosTradingSequences_BooleanSeq_H_
#define _TAO_CDR_OP_CosTradingSequences_BooleanSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Trading_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CosTradingSequences::BooleanSeq &_tao_sequence
  );
TAO_Trading_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CosTradingSequences::BooleanSeq &_tao_sequence
  );
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CosTradingSequences_BooleanSeq_H_ */

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CosTradingSequences_FloatSeq_H_
#define _TAO_CDR_OP_CosTradingSequences_FloatSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Trading_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CosTradingSequences::FloatSeq &_tao_sequence
  );
TAO_Trading_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CosTradingSequences::FloatSeq &_tao_sequence
  );
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CosTradingSequences_FloatSeq_H_ */

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CosTradingSequences_DoubleSeq_H_
#define _TAO_CDR_OP_CosTradingSequences_DoubleSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Trading_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CosTradingSequences::DoubleSeq &_tao_sequence
  );
TAO_Trading_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CosTradingSequences::DoubleSeq &_tao_sequence
  );
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CosTradingSequences_DoubleSeq_H_ */

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CosTradingSequences_StringSeq_H_
#define _TAO_CDR_OP_CosTradingSequences_StringSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Trading_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CosTradingSequences::StringSeq &_tao_sequence
  );
TAO_Trading_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CosTradingSequences::StringSeq &_tao_sequence
  );
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_CosTradingSequences_StringSeq_H_ */

// TAO_IDL - Generated from
// be\be_codegen.cpp:1228


TAO_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "CosTradingReposC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */


