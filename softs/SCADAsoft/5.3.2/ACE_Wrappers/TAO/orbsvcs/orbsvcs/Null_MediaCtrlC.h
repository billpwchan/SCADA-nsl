// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler v1.6a_p10 ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be\be_codegen.cpp:135

#ifndef _TAO_IDL_NULL_MEDIACTRLC_H_
#define _TAO_IDL_NULL_MEDIACTRLC_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "orbsvcs/AV/AV_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/ORB.h"
#include "tao/Basic_Types.h"
#include "tao/Object.h"
#include "tao/Objref_VarOut_T.h"
#include /**/ "tao/Versioned_Namespace.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_AV_Export

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from 
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_root/root_ch.cpp:62

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  class Collocation_Proxy_Broker;
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be\be_interface.cpp:644

#if !defined (_NULL_MEDIACTRL__VAR_OUT_CH_)
#define _NULL_MEDIACTRL__VAR_OUT_CH_

class Null_MediaCtrl;
typedef Null_MediaCtrl *Null_MediaCtrl_ptr;

typedef
  TAO_Objref_Var_T<
      Null_MediaCtrl
    >
  Null_MediaCtrl_var;

typedef
  TAO_Objref_Out_T<
      Null_MediaCtrl
    >
  Null_MediaCtrl_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_NULL_MEDIACTRL_CH_)
#define _NULL_MEDIACTRL_CH_

class TAO_AV_Export Null_MediaCtrl
  : public virtual ::CORBA::Object
{
public:
  friend class TAO::Narrow_Utils<Null_MediaCtrl>;
  typedef Null_MediaCtrl_ptr _ptr_type;
  typedef Null_MediaCtrl_var _var_type;
  typedef Null_MediaCtrl_out _out_type;
  
  // The static operations.
  static Null_MediaCtrl_ptr _duplicate (Null_MediaCtrl_ptr obj);
  
  static void _tao_release (Null_MediaCtrl_ptr obj);
  
  static Null_MediaCtrl_ptr _narrow (::CORBA::Object_ptr obj);
  static Null_MediaCtrl_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static Null_MediaCtrl_ptr _nil (void)
  {
    return static_cast<Null_MediaCtrl_ptr> (0);
  }
  
  static void _tao_any_destructor (void *);
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:216
  
  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
private:
  TAO::Collocation_Proxy_Broker *the_TAO_Null_MediaCtrl_Proxy_Broker_;

protected:
  // Concrete interface only.
  Null_MediaCtrl (void);
  
  // These methods travese the inheritance tree and set the
  // parents piece of the given class in the right mode.
  virtual void Null_MediaCtrl_setup_collocation (void);
  
  // Concrete non-local interface only.
  Null_MediaCtrl (
      ::IOP::IOR *ior,
      TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  Null_MediaCtrl (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = 0,
      TAO_ORB_Core *orb_core = 0);
  
  virtual ~Null_MediaCtrl (void);

private:
  // Private and unimplemented for concrete interfaces.
  Null_MediaCtrl (const Null_MediaCtrl &);
  
  void operator= (const Null_MediaCtrl &);
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49

extern TAO_AV_Export ::CORBA::TypeCode_ptr const _tc_Null_MediaCtrl;

// Proxy Broker Factory function pointer declarations.

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_root/root.cpp:139

extern TAO_AV_Export
TAO::Collocation_Proxy_Broker *
(*_TAO_Null_MediaCtrl_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj
  );

// TAO_IDL - Generated from
// be\be_visitor_traits.cpp:64


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_NULL_MEDIACTRL__TRAITS_)
#define _NULL_MEDIACTRL__TRAITS_
  
  template<>
  struct TAO_AV_Export Objref_Traits< ::Null_MediaCtrl>
  {
    static ::Null_MediaCtrl_ptr duplicate (
        ::Null_MediaCtrl_ptr p
      );
    static void release (
        ::Null_MediaCtrl_ptr p
      );
    static ::Null_MediaCtrl_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Null_MediaCtrl_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:54



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_AV_Export void operator<<= (::CORBA::Any &, Null_MediaCtrl_ptr); // copying
TAO_AV_Export void operator<<= (::CORBA::Any &, Null_MediaCtrl_ptr *); // non-copying
TAO_AV_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Null_MediaCtrl_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:55


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_AV_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Null_MediaCtrl_ptr );
TAO_AV_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Null_MediaCtrl_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be\be_codegen.cpp:1228


TAO_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "Null_MediaCtrlC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */


