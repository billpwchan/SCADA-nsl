// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler v1.6a_p10 ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be\be_codegen.cpp:135

#ifndef _TAO_IDL_RTECUDPADMINC_H_
#define _TAO_IDL_RTECUDPADMINC_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "orbsvcs/Event/event_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/AnyTypeCode/OctetSeqA.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/VarOut_T.h"
#include "tao/Array_VarOut_T.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "RtecEventCommC.h"
#include "tao/OctetSeqC.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_RTEvent_Export

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from 
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_root/root_ch.cpp:62

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  class Collocation_Proxy_Broker;
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:472

typedef CORBA::OctetSeq EventPayload;
typedef CORBA::OctetSeq_var EventPayload_var;
typedef CORBA::OctetSeq_out EventPayload_out;

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_module/module_ch.cpp:49

namespace RtecUDPAdmin
{
  
  // TAO_IDL - Generated from
  // be\be_type.cpp:269
  
  struct UDP_Addr;
  
  typedef
    TAO_Fixed_Var_T<
        UDP_Addr
      >
    UDP_Addr_var;
  
  typedef
    UDP_Addr &
    UDP_Addr_out;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:57
  
  struct TAO_RTEvent_Export UDP_Addr
  {
    typedef UDP_Addr_var _var_type;
    typedef UDP_Addr_out _out_type;
    
    static void _tao_any_destructor (void *);
    ::CORBA::ULong ipaddr;
    ::CORBA::UShort port;
  };
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_RTEvent_Export ::CORBA::TypeCode_ptr const _tc_UDP_Addr;
  
  // TAO_IDL - Generated from
  // be\be_type.cpp:269
  
  struct UDP_Addr_v6;
  
  typedef
    TAO_Fixed_Var_T<
        UDP_Addr_v6
      >
    UDP_Addr_v6_var;
  
  typedef
    UDP_Addr_v6 &
    UDP_Addr_v6_out;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:57
  
  struct TAO_RTEvent_Export UDP_Addr_v6
  {
    typedef UDP_Addr_v6_var _var_type;
    typedef UDP_Addr_v6_out _out_type;
    
    static void _tao_any_destructor (void *);
    
    
    // TAO_IDL - Generated from 
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_array/array_ch.cpp:62

#if !defined (_RTECUDPADMIN_UDP_ADDR_V6_IPADDR_CH_)
#define _RTECUDPADMIN_UDP_ADDR_V6_IPADDR_CH_
    
    typedef ::CORBA::Char _ipaddr[16];
    typedef ::CORBA::Char _ipaddr_slice;
    struct _ipaddr_tag {};
    
    
    typedef
      TAO_Array_Forany_T<
          _ipaddr,
          _ipaddr_slice,
          _ipaddr_tag
        >
      _ipaddr_forany;
    
    static _ipaddr_slice *
    _ipaddr_alloc (void);
    
    static void
    _ipaddr_free (
        _ipaddr_slice *_tao_slice
      );
    
    static _ipaddr_slice *
    _ipaddr_dup (
        const _ipaddr_slice *_tao_slice
      );
    
    static void
    _ipaddr_copy (
        _ipaddr_slice *_tao_to,
        const _ipaddr_slice *_tao_from
      );

#endif /* end #if !defined */
    
    _ipaddr ipaddr;
    ::CORBA::UShort port;
  };
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_RTEvent_Export ::CORBA::TypeCode_ptr const _tc_UDP_Addr_v6;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_enum/enum_ch.cpp:57
  
  enum Address_Family
  {
    Rtec_inet,
    Rtec_inet6
  };
  
  typedef Address_Family &Address_Family_out;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_RTEvent_Export ::CORBA::TypeCode_ptr const _tc_Address_Family;
  
  // TAO_IDL - Generated from
  // be\be_type.cpp:269
  
  class UDP_Address;
  
  typedef
    TAO_Fixed_Var_T<
        UDP_Address
      >
    UDP_Address_var;
  
  typedef
    UDP_Address &
    UDP_Address_out;

#if !defined (_RTECUDPADMIN_UDP_ADDRESS_CH_)
#define _RTECUDPADMIN_UDP_ADDRESS_CH_
  
  class TAO_RTEvent_Export UDP_Address
  {
  public:
    UDP_Address (void);
    UDP_Address (const UDP_Address &);
    ~UDP_Address (void);
    static void _tao_any_destructor (void*);
    
    UDP_Address &operator= (const UDP_Address &);
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_union/discriminant_ch.cpp:82
    
    void _d (RtecUDPAdmin::Address_Family);
    RtecUDPAdmin::Address_Family _d (void) const;
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_union/union_ch.cpp:113
    
    typedef UDP_Address_var _var_type;
    typedef UDP_Address_out _out_type;
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_union_branch/public_ch.cpp:667
    
    void v4_addr (const RtecUDPAdmin::UDP_Addr &);
    const RtecUDPAdmin::UDP_Addr &v4_addr (void) const;
    RtecUDPAdmin::UDP_Addr &v4_addr (void);
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_union_branch/public_ch.cpp:667
    
    void v6_addr (const RtecUDPAdmin::UDP_Addr_v6 &);
    const RtecUDPAdmin::UDP_Addr_v6 &v6_addr (void) const;
    RtecUDPAdmin::UDP_Addr_v6 &v6_addr (void);
  private:
    RtecUDPAdmin::Address_Family disc_;
    RtecUDPAdmin::Address_Family holder_;
    
    union
    {
      // TAO_IDL - Generated from
      // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_union_branch/private_ch.cpp:530
      RtecUDPAdmin::UDP_Addr v4_addr_;
      // TAO_IDL - Generated from
      // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_union_branch/private_ch.cpp:530
      RtecUDPAdmin::UDP_Addr_v6 v6_addr_;
    } u_;
    
    /// TAO extension - frees any allocated storage.
    void _reset (void);
  };
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_RTEvent_Export ::CORBA::TypeCode_ptr const _tc_UDP_Address;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:644

#if !defined (_RTECUDPADMIN_ADDRSERVER__VAR_OUT_CH_)
#define _RTECUDPADMIN_ADDRSERVER__VAR_OUT_CH_
  
  class AddrServer;
  typedef AddrServer *AddrServer_ptr;
  
  typedef
    TAO_Objref_Var_T<
        AddrServer
      >
    AddrServer_var;
  
  typedef
    TAO_Objref_Out_T<
        AddrServer
      >
    AddrServer_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_RTECUDPADMIN_ADDRSERVER_CH_)
#define _RTECUDPADMIN_ADDRSERVER_CH_
  
  class TAO_RTEvent_Export AddrServer
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<AddrServer>;
    typedef AddrServer_ptr _ptr_type;
    typedef AddrServer_var _var_type;
    typedef AddrServer_out _out_type;
    
    // The static operations.
    static AddrServer_ptr _duplicate (AddrServer_ptr obj);
    
    static void _tao_release (AddrServer_ptr obj);
    
    static AddrServer_ptr _narrow (::CORBA::Object_ptr obj);
    static AddrServer_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static AddrServer_ptr _nil (void)
    {
      return static_cast<AddrServer_ptr> (0);
    }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void get_addr (
        const ::RtecEventComm::EventHeader & header,
        ::RtecUDPAdmin::UDP_Addr_out addr);
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void get_address (
        const ::RtecEventComm::EventHeader & header,
        ::RtecUDPAdmin::UDP_Address_out addr);
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:216
    
    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_AddrServer_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    AddrServer (void);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void RtecUDPAdmin_AddrServer_setup_collocation (void);
    
    // Concrete non-local interface only.
    AddrServer (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    AddrServer (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);
    
    virtual ~AddrServer (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    AddrServer (const AddrServer &);
    
    void operator= (const AddrServer &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_RTEvent_Export ::CORBA::TypeCode_ptr const _tc_AddrServer;

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_module/module_ch.cpp:78

} // module RtecUDPAdmin

// Proxy Broker Factory function pointer declarations.

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_root/root.cpp:139

extern TAO_RTEvent_Export
TAO::Collocation_Proxy_Broker *
(*RtecUDPAdmin__TAO_AddrServer_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj
  );

// TAO_IDL - Generated from
// be\be_visitor_traits.cpp:64


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{
  template<>
  struct TAO_RTEvent_Export Array_Traits<
      RtecUDPAdmin::UDP_Addr_v6::_ipaddr_forany
    >
  {
    static void free (
        RtecUDPAdmin::UDP_Addr_v6::_ipaddr_slice * _tao_slice
      );
    static RtecUDPAdmin::UDP_Addr_v6::_ipaddr_slice * dup (
        const RtecUDPAdmin::UDP_Addr_v6::_ipaddr_slice * _tao_slice
      );
    static void copy (
        RtecUDPAdmin::UDP_Addr_v6::_ipaddr_slice * _tao_to,
        const RtecUDPAdmin::UDP_Addr_v6::_ipaddr_slice * _tao_from
      );
    static RtecUDPAdmin::UDP_Addr_v6::_ipaddr_slice * alloc (void);
    static void zero (
        RtecUDPAdmin::UDP_Addr_v6::_ipaddr_slice * _tao_slice
      );
  };

#if !defined (_RTECUDPADMIN_ADDRSERVER__TRAITS_)
#define _RTECUDPADMIN_ADDRSERVER__TRAITS_
  
  template<>
  struct TAO_RTEvent_Export Objref_Traits< ::RtecUDPAdmin::AddrServer>
  {
    static ::RtecUDPAdmin::AddrServer_ptr duplicate (
        ::RtecUDPAdmin::AddrServer_ptr p
      );
    static void release (
        ::RtecUDPAdmin::AddrServer_ptr p
      );
    static ::RtecUDPAdmin::AddrServer_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::RtecUDPAdmin::AddrServer_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:53



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTEvent_Export void operator<<= (::CORBA::Any &, const RtecUDPAdmin::UDP_Addr &); // copying version
TAO_RTEvent_Export void operator<<= (::CORBA::Any &, RtecUDPAdmin::UDP_Addr*); // noncopying version
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RtecUDPAdmin::UDP_Addr *&); // deprecated
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const RtecUDPAdmin::UDP_Addr *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:53



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTEvent_Export void operator<<= (::CORBA::Any &, const RtecUDPAdmin::UDP_Addr_v6 &); // copying version
TAO_RTEvent_Export void operator<<= (::CORBA::Any &, RtecUDPAdmin::UDP_Addr_v6*); // noncopying version
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RtecUDPAdmin::UDP_Addr_v6 *&); // deprecated
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const RtecUDPAdmin::UDP_Addr_v6 *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_enum/any_op_ch.cpp:52

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_RTEvent_Export void operator<<= (::CORBA::Any &, RtecUDPAdmin::Address_Family);
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RtecUDPAdmin::Address_Family &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_union/any_op_ch.cpp:53



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTEvent_Export void operator<<= (::CORBA::Any &, const RtecUDPAdmin::UDP_Address &); // copying version
TAO_RTEvent_Export void operator<<= (::CORBA::Any &, RtecUDPAdmin::UDP_Address*); // noncopying version
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RtecUDPAdmin::UDP_Address *&); // deprecated
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const RtecUDPAdmin::UDP_Address *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:54



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace RtecUDPAdmin
{
  TAO_RTEvent_Export void operator<<= ( ::CORBA::Any &, AddrServer_ptr); // copying
  TAO_RTEvent_Export void operator<<= ( ::CORBA::Any &, AddrServer_ptr *); // non-copying
  TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, AddrServer_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTEvent_Export void operator<<= (::CORBA::Any &, RtecUDPAdmin::AddrServer_ptr); // copying
TAO_RTEvent_Export void operator<<= (::CORBA::Any &, RtecUDPAdmin::AddrServer_ptr *); // non-copying
TAO_RTEvent_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RtecUDPAdmin::AddrServer_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:54



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTEvent_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const RtecUDPAdmin::UDP_Addr &);
TAO_RTEvent_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, RtecUDPAdmin::UDP_Addr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:54



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTEvent_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const RtecUDPAdmin::UDP_Addr_v6 &);
TAO_RTEvent_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, RtecUDPAdmin::UDP_Addr_v6 &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_array/cdr_op_ch.cpp:116



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTEvent_Export CORBA::Boolean operator<< (TAO_OutputCDR &strm, const RtecUDPAdmin::UDP_Addr_v6::_ipaddr_forany &_tao_array);
TAO_RTEvent_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, RtecUDPAdmin::UDP_Addr_v6::_ipaddr_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_enum/cdr_op_ch.cpp:50



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTEvent_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, RtecUDPAdmin::Address_Family _tao_enumerator);
TAO_RTEvent_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, RtecUDPAdmin::Address_Family &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_union/cdr_op_ch.cpp:54



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTEvent_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const RtecUDPAdmin::UDP_Address &);
TAO_RTEvent_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, RtecUDPAdmin::UDP_Address &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:55


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_RTEvent_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const RtecUDPAdmin::AddrServer_ptr );
TAO_RTEvent_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, RtecUDPAdmin::AddrServer_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be\be_codegen.cpp:1228


TAO_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "RtecUDPAdminC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */


