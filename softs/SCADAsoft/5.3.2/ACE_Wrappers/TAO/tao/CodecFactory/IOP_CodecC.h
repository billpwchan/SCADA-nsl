// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler v1.6a_p10 ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be\be_codegen.cpp:135

#ifndef _TAO_PIDL_CODECFACTORY_IOP_CODECC_H_
#define _TAO_PIDL_CODECFACTORY_IOP_CODECC_H_

#include /**/ "ace/pre.h"

#ifndef TAO_CODECFACTORY_SAFE_INCLUDE
#error You should not include CodecFactory/IOP_CodecC.h, use tao/CodecFactory/CodecFactory.h
#endif /* TAO_CODECFACTORY_SAFE_INCLUDE */

#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "tao/CodecFactory/codecfactory_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/SystemException.h"
#include "tao/UserException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/AnyTypeCode/TypeCode.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/AnyTypeCode/Typecode_typesA.h"
#include "tao/AnyTypeCode/OctetSeqA.h"
#include "tao/AnyTypeCode/CONV_FRAMEA.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/VarOut_T.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "tao/Typecode_typesC.h"
#include "tao/OctetSeqC.h"
#include "tao/CONV_FRAMEC.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_CodecFactory_Export

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_module/module_ch.cpp:49

namespace IOP
{
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:644

#if !defined (_IOP_CODEC__VAR_OUT_CH_)
#define _IOP_CODEC__VAR_OUT_CH_
  
  class Codec;
  typedef Codec *Codec_ptr;
  
  typedef
    TAO_Objref_Var_T<
        Codec
      >
    Codec_var;
  
  typedef
    TAO_Objref_Out_T<
        Codec
      >
    Codec_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_IOP_CODEC_CH_)
#define _IOP_CODEC_CH_
  
  class TAO_CodecFactory_Export Codec
    : public virtual ::CORBA::Object
  {
  public:
    typedef Codec_ptr _ptr_type;
    typedef Codec_var _var_type;
    typedef Codec_out _out_type;
    
    // The static operations.
    static Codec_ptr _duplicate (Codec_ptr obj);
    
    static void _tao_release (Codec_ptr obj);
    
    static Codec_ptr _narrow (::CORBA::Object_ptr obj);
    static Codec_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Codec_ptr _nil (void)
    {
      return static_cast<Codec_ptr> (0);
    }
    
    
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:53

#if !defined (_IOP_CODEC_INVALIDTYPEFORENCODING_CH_)
#define _IOP_CODEC_INVALIDTYPEFORENCODING_CH_
    
    class TAO_CodecFactory_Export InvalidTypeForEncoding : public ::CORBA::UserException
    {
    public:
      
      InvalidTypeForEncoding (void);
      InvalidTypeForEncoding (const InvalidTypeForEncoding &);
      ~InvalidTypeForEncoding (void);

      InvalidTypeForEncoding &operator= (const InvalidTypeForEncoding &);
      
      static void _tao_any_destructor (void *);
      
      static InvalidTypeForEncoding *_downcast ( ::CORBA::Exception *);
      static const InvalidTypeForEncoding *_downcast ( ::CORBA::Exception const *);
      
      static ::CORBA::Exception *_alloc (void);
      
      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      
      
      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
    
    static ::CORBA::TypeCode_ptr const _tc_InvalidTypeForEncoding;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:53

#if !defined (_IOP_CODEC_FORMATMISMATCH_CH_)
#define _IOP_CODEC_FORMATMISMATCH_CH_
    
    class TAO_CodecFactory_Export FormatMismatch : public ::CORBA::UserException
    {
    public:
      
      FormatMismatch (void);
      FormatMismatch (const FormatMismatch &);
      ~FormatMismatch (void);

      FormatMismatch &operator= (const FormatMismatch &);
      
      static void _tao_any_destructor (void *);
      
      static FormatMismatch *_downcast ( ::CORBA::Exception *);
      static const FormatMismatch *_downcast ( ::CORBA::Exception const *);
      
      static ::CORBA::Exception *_alloc (void);
      
      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      
      
      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
    
    static ::CORBA::TypeCode_ptr const _tc_FormatMismatch;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:53

#if !defined (_IOP_CODEC_TYPEMISMATCH_CH_)
#define _IOP_CODEC_TYPEMISMATCH_CH_
    
    class TAO_CodecFactory_Export TypeMismatch : public ::CORBA::UserException
    {
    public:
      
      TypeMismatch (void);
      TypeMismatch (const TypeMismatch &);
      ~TypeMismatch (void);

      TypeMismatch &operator= (const TypeMismatch &);
      
      static void _tao_any_destructor (void *);
      
      static TypeMismatch *_downcast ( ::CORBA::Exception *);
      static const TypeMismatch *_downcast ( ::CORBA::Exception const *);
      
      static ::CORBA::Exception *_alloc (void);
      
      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      
      
      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
    
    static ::CORBA::TypeCode_ptr const _tc_TypeMismatch;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::OctetSeq * encode (
        const ::CORBA::Any & data) = 0;
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::Any * decode (
        const ::CORBA::OctetSeq & data) = 0;
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::OctetSeq * encode_value (
        const ::CORBA::Any & data) = 0;
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::Any * decode_value (
        const ::CORBA::OctetSeq & data,
        ::CORBA::TypeCode_ptr tc) = 0;
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:216
    
    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    Codec (void);
    
    virtual ~Codec (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Codec (const Codec &);
    
    void operator= (const Codec &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_CodecFactory_Export ::CORBA::TypeCode_ptr const _tc_Codec;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:379
  
  typedef ::CORBA::Short EncodingFormat;
  typedef ::CORBA::Short_out EncodingFormat_out;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_CodecFactory_Export ::CORBA::TypeCode_ptr const _tc_EncodingFormat;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:52
  
  const IOP::EncodingFormat ENCODING_CDR_ENCAPS = 0;
  
  // TAO_IDL - Generated from
  // be\be_type.cpp:269
  
  struct Encoding;
  
  typedef
    TAO_Fixed_Var_T<
        Encoding
      >
    Encoding_var;
  
  typedef
    Encoding &
    Encoding_out;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:57
  
  struct TAO_CodecFactory_Export Encoding
  {
    typedef Encoding_var _var_type;
    typedef Encoding_out _out_type;
    
    static void _tao_any_destructor (void *);
    IOP::EncodingFormat format;
    ::CORBA::Octet major_version;
    ::CORBA::Octet minor_version;
  };
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_CodecFactory_Export ::CORBA::TypeCode_ptr const _tc_Encoding;
  
  // TAO_IDL - Generated from
  // be\be_type.cpp:269
  
  struct Encoding_1_2;
  
  typedef
    TAO_Fixed_Var_T<
        Encoding_1_2
      >
    Encoding_1_2_var;
  
  typedef
    Encoding_1_2 &
    Encoding_1_2_out;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:57
  
  struct TAO_CodecFactory_Export Encoding_1_2
  {
    typedef Encoding_1_2_var _var_type;
    typedef Encoding_1_2_out _out_type;
    
    static void _tao_any_destructor (void *);
    IOP::EncodingFormat format;
    ::CORBA::Octet major_version;
    ::CORBA::Octet minor_version;
    CONV_FRAME::CodeSetId char_codeset;
    CONV_FRAME::CodeSetId wchar_codeset;
  };
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_CodecFactory_Export ::CORBA::TypeCode_ptr const _tc_Encoding_1_2;
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:644

#if !defined (_IOP_CODECFACTORY__VAR_OUT_CH_)
#define _IOP_CODECFACTORY__VAR_OUT_CH_
  
  class CodecFactory;
  typedef CodecFactory *CodecFactory_ptr;
  
  typedef
    TAO_Objref_Var_T<
        CodecFactory
      >
    CodecFactory_var;
  
  typedef
    TAO_Objref_Out_T<
        CodecFactory
      >
    CodecFactory_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_IOP_CODECFACTORY_CH_)
#define _IOP_CODECFACTORY_CH_
  
  class TAO_CodecFactory_Export CodecFactory
    : public virtual ::CORBA::Object
  {
  public:
    typedef CodecFactory_ptr _ptr_type;
    typedef CodecFactory_var _var_type;
    typedef CodecFactory_out _out_type;
    
    // The static operations.
    static CodecFactory_ptr _duplicate (CodecFactory_ptr obj);
    
    static void _tao_release (CodecFactory_ptr obj);
    
    static CodecFactory_ptr _narrow (::CORBA::Object_ptr obj);
    static CodecFactory_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static CodecFactory_ptr _nil (void)
    {
      return static_cast<CodecFactory_ptr> (0);
    }
    
    
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:53

#if !defined (_IOP_CODECFACTORY_UNKNOWNENCODING_CH_)
#define _IOP_CODECFACTORY_UNKNOWNENCODING_CH_
    
    class TAO_CodecFactory_Export UnknownEncoding : public ::CORBA::UserException
    {
    public:
      
      UnknownEncoding (void);
      UnknownEncoding (const UnknownEncoding &);
      ~UnknownEncoding (void);

      UnknownEncoding &operator= (const UnknownEncoding &);
      
      static void _tao_any_destructor (void *);
      
      static UnknownEncoding *_downcast ( ::CORBA::Exception *);
      static const UnknownEncoding *_downcast ( ::CORBA::Exception const *);
      
      static ::CORBA::Exception *_alloc (void);
      
      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      
      
      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
    
    static ::CORBA::TypeCode_ptr const _tc_UnknownEncoding;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:53

#if !defined (_IOP_CODECFACTORY_UNSUPPORTEDCODESET_CH_)
#define _IOP_CODECFACTORY_UNSUPPORTEDCODESET_CH_
    
    class TAO_CodecFactory_Export UnsupportedCodeset : public ::CORBA::UserException
    {
    public:
      
      CONV_FRAME::CodeSetId codeset;
      UnsupportedCodeset (void);
      UnsupportedCodeset (const UnsupportedCodeset &);
      ~UnsupportedCodeset (void);

      UnsupportedCodeset &operator= (const UnsupportedCodeset &);
      
      static void _tao_any_destructor (void *);
      
      static UnsupportedCodeset *_downcast ( ::CORBA::Exception *);
      static const UnsupportedCodeset *_downcast ( ::CORBA::Exception const *);
      
      static ::CORBA::Exception *_alloc (void);
      
      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      
      
      // TAO_IDL - Generated from
      // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_exception/exception_ctor.cpp:66
      
      UnsupportedCodeset (
          CONV_FRAME::CodeSetId _tao_codeset
        );
      
      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
    
    static ::CORBA::TypeCode_ptr const _tc_UnsupportedCodeset;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::IOP::Codec_ptr create_codec (
        const ::IOP::Encoding & enc) = 0;
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::IOP::Codec_ptr create_codec_with_codesets (
        const ::IOP::Encoding_1_2 & enc) = 0;
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:216
    
    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    CodecFactory (void);
    
    virtual ~CodecFactory (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    CodecFactory (const CodecFactory &);
    
    void operator= (const CodecFactory &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_CodecFactory_Export ::CORBA::TypeCode_ptr const _tc_CodecFactory;

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_module/module_ch.cpp:78

} // module IOP

// TAO_IDL - Generated from
// be\be_visitor_traits.cpp:64


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_IOP_CODEC__TRAITS_)
#define _IOP_CODEC__TRAITS_
  
  template<>
  struct TAO_CodecFactory_Export Objref_Traits< ::IOP::Codec>
  {
    static ::IOP::Codec_ptr duplicate (
        ::IOP::Codec_ptr p
      );
    static void release (
        ::IOP::Codec_ptr p
      );
    static ::IOP::Codec_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::IOP::Codec_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_IOP_CODECFACTORY__TRAITS_)
#define _IOP_CODECFACTORY__TRAITS_
  
  template<>
  struct TAO_CodecFactory_Export Objref_Traits< ::IOP::CodecFactory>
  {
    static ::IOP::CodecFactory_ptr duplicate (
        ::IOP::CodecFactory_ptr p
      );
    static void release (
        ::IOP::CodecFactory_ptr p
      );
    static ::IOP::CodecFactory_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::IOP::CodecFactory_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:53



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_CodecFactory_Export void operator<<= (::CORBA::Any &, const IOP::Encoding &); // copying version
TAO_CodecFactory_Export void operator<<= (::CORBA::Any &, IOP::Encoding*); // noncopying version
TAO_CodecFactory_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, IOP::Encoding *&); // deprecated
TAO_CodecFactory_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const IOP::Encoding *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:53



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_CodecFactory_Export void operator<<= (::CORBA::Any &, const IOP::Encoding_1_2 &); // copying version
TAO_CodecFactory_Export void operator<<= (::CORBA::Any &, IOP::Encoding_1_2*); // noncopying version
TAO_CodecFactory_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, IOP::Encoding_1_2 *&); // deprecated
TAO_CodecFactory_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const IOP::Encoding_1_2 *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:54



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_CodecFactory_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const IOP::Encoding &);
TAO_CodecFactory_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, IOP::Encoding &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:54



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_CodecFactory_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const IOP::Encoding_1_2 &);
TAO_CodecFactory_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, IOP::Encoding_1_2 &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be\be_codegen.cpp:1228


TAO_END_VERSIONED_NAMESPACE_DECL

#include /**/ "ace/post.h"

#endif /* ifndef */


