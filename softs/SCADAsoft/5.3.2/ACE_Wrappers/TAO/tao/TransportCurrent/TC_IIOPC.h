// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler v1.6a_p10 ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be\be_codegen.cpp:135

#ifndef _TAO_IDL_TRANSPORTCURRENT_TC_IIOPC_H_
#define _TAO_IDL_TRANSPORTCURRENT_TC_IIOPC_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "tao/TransportCurrent/Transport_Current_Export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/ORB.h"
#include "tao/Basic_Types.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Objref_VarOut_T.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "tao/TransportCurrent/TCC.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_Transport_Current_Export

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_module/module_ch.cpp:49

namespace SSLIOP
{
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:644

#if !defined (_SSLIOP_CURRENT__VAR_OUT_CH_)
#define _SSLIOP_CURRENT__VAR_OUT_CH_
  
  class Current;
  typedef Current *Current_ptr;
  
  typedef
    TAO_Objref_Var_T<
        Current
      >
    Current_var;
  
  typedef
    TAO_Objref_Out_T<
        Current
      >
    Current_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_module/module_ch.cpp:78

} // module SSLIOP

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_module/module_ch.cpp:49

namespace TAO
{
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_module/module_ch.cpp:49
  
  namespace Transport
  {
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_module/module_ch.cpp:49
    
    namespace IIOP
    {
      
      // TAO_IDL - Generated from
      // be\be_interface.cpp:644

#if !defined (_TAO_TRANSPORT_IIOP_CURRENT__VAR_OUT_CH_)
#define _TAO_TRANSPORT_IIOP_CURRENT__VAR_OUT_CH_
      
      class Current;
      typedef Current *Current_ptr;
      
      typedef
        TAO_Objref_Var_T<
            Current
          >
        Current_var;
      
      typedef
        TAO_Objref_Out_T<
            Current
          >
        Current_out;

#endif /* end #if !defined */
      
      // TAO_IDL - Generated from
      // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_TAO_TRANSPORT_IIOP_CURRENT_CH_)
#define _TAO_TRANSPORT_IIOP_CURRENT_CH_
      
      class TAO_Transport_Current_Export Current
        : public virtual ::TAO::Transport::Current
      {
      public:
        typedef Current_ptr _ptr_type;
        typedef Current_var _var_type;
        typedef Current_out _out_type;
        
        // The static operations.
        static Current_ptr _duplicate (Current_ptr obj);
        
        static void _tao_release (Current_ptr obj);
        
        static Current_ptr _narrow (::CORBA::Object_ptr obj);
        static Current_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
        static Current_ptr _nil (void)
        {
          return static_cast<Current_ptr> (0);
        }
        
        static void _tao_any_destructor (void *);
        
        // TAO_IDL - Generated from
        // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
        
        virtual char * remote_host (
            void) = 0;
        
        // TAO_IDL - Generated from
        // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
        
        virtual ::CORBA::Long remote_port (
            void) = 0;
        
        // TAO_IDL - Generated from
        // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
        
        virtual char * local_host (
            void) = 0;
        
        // TAO_IDL - Generated from
        // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
        
        virtual ::CORBA::Long local_port (
            void) = 0;
        
        // TAO_IDL - Generated from
        // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
        
        virtual ::SSLIOP::Current_ptr ssliop_current (
            void) = 0;
        
        // TAO_IDL - Generated from
        // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:216
        
        virtual ::CORBA::Boolean _is_a (const char *type_id);
        virtual const char* _interface_repository_id (void) const;
        virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
      
      protected:
        // Abstract or local interface only.
        Current (void);
        
        virtual ~Current (void);
      
      private:
        // Private and unimplemented for concrete interfaces.
        Current (const Current &);
        
        void operator= (const Current &);
      };

#endif /* end #if !defined */
      
      // TAO_IDL - Generated from
      // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
      
      extern TAO_Transport_Current_Export ::CORBA::TypeCode_ptr const _tc_Current;
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_module/module_ch.cpp:78
    
    } // module TAO::Transport::IIOP
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_module/module_ch.cpp:78
  
  } // module TAO::Transport

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_module/module_ch.cpp:78

} // module TAO

// TAO_IDL - Generated from
// be\be_visitor_traits.cpp:64


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_SSLIOP_CURRENT__TRAITS_)
#define _SSLIOP_CURRENT__TRAITS_
  
  template<>
  struct TAO_Transport_Current_Export Objref_Traits< ::SSLIOP::Current>
  {
    static ::SSLIOP::Current_ptr duplicate (
        ::SSLIOP::Current_ptr p
      );
    static void release (
        ::SSLIOP::Current_ptr p
      );
    static ::SSLIOP::Current_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::SSLIOP::Current_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_TAO_TRANSPORT_IIOP_CURRENT__TRAITS_)
#define _TAO_TRANSPORT_IIOP_CURRENT__TRAITS_
  
  template<>
  struct TAO_Transport_Current_Export Objref_Traits< ::TAO::Transport::IIOP::Current>
  {
    static ::TAO::Transport::IIOP::Current_ptr duplicate (
        ::TAO::Transport::IIOP::Current_ptr p
      );
    static void release (
        ::TAO::Transport::IIOP::Current_ptr p
      );
    static ::TAO::Transport::IIOP::Current_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::TAO::Transport::IIOP::Current_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface_fwd/any_op_ch.cpp:65



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace SSLIOP
{
  TAO_Transport_Current_Export void operator<<= ( ::CORBA::Any &, Current_ptr); // copying
  TAO_Transport_Current_Export void operator<<= ( ::CORBA::Any &, Current_ptr *); // non-copying
  TAO_Transport_Current_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Current *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Transport_Current_Export void operator<<= (::CORBA::Any &, SSLIOP::Current_ptr); // copying
TAO_Transport_Current_Export void operator<<= (::CORBA::Any &, SSLIOP::Current_ptr *); // non-copying
TAO_Transport_Current_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SSLIOP::Current *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:54



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace TAO
{
  
  namespace Transport
  {
    
    namespace IIOP
    {
      TAO_Transport_Current_Export void operator<<= ( ::CORBA::Any &, Current_ptr); // copying
      TAO_Transport_Current_Export void operator<<= ( ::CORBA::Any &, Current_ptr *); // non-copying
      TAO_Transport_Current_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Current_ptr &);
    }
  }
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Transport_Current_Export void operator<<= (::CORBA::Any &, TAO::Transport::IIOP::Current_ptr); // copying
TAO_Transport_Current_Export void operator<<= (::CORBA::Any &, TAO::Transport::IIOP::Current_ptr *); // non-copying
TAO_Transport_Current_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TAO::Transport::IIOP::Current_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface_fwd/cdr_op_ch.cpp:64



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Transport_Current_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SSLIOP::Current_ptr );
TAO_Transport_Current_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, SSLIOP::Current_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be\be_codegen.cpp:1228


TAO_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "TC_IIOPC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */


