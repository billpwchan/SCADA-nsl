COMPONENT=Sec,Sec

Init() {
   english="Sec Initialization"
   french="Initialisation du serveur Sec"
}

ORB(const char *) {
   english="Orb Error %s"
   french="Erreur Orb %s"
}
HostServer(const char *) {
   english="Server %s is not registered at the host server"
   french="Le server %s n'est pas enregistre aupres du server de nom"
}
Function(const char *) {
   english="Function %s error"
   french="Erreur fonction %s"
}
UserNameNotValid(const char *) {
   english="User name [%s] not valid"
   french="Nom d'utilisateur [%s] non valide"
}
UserFileOpen(const char *) {
   english="Error opening user file [%s]"
   french="Erreur d'ouverture du fichier utilisateur [%s]"
}
UserFileIO(const char *) {
   english="Fatal I/O error for user file [%s]"
   french="Erreur d'E/S fatale pour le fichier utilisateur [%s]"
}
ProfileAlreadyLoaded(const char *) {
   english="User [%s] profile already loaded"
   french="Profile de l'utilisateur [%s] deja charge"
}
ProfileNotFound(const char *) {
   english="Profile not found for user [%s]"
   french="Profile non trouve pour l'utilisateur [%s]"
}
GetGroupMask(const char *) {
   english="Error getting user [%s] group mask"
   french="Erreur de lecture du masque de groupe pour l'utilisateur [%s]"
}
GetReadCategories(const char *) {
   english="Error getting user [%s] read categories"
   french="Erreur de lecture des categories en lecture pour l'utilisateur [%s]"
}
GetWriteCategories(const char *) {
   english="Error getting user [%s] write categories"
   french="Erreur de lecture des categories en ecriture pour l'utilisateur [%s]"
}
GetApplicationList(const char *) {
   english="Error getting user [%s] application list"
   french="Erreur de lecture des applications pour l'utilisateur [%s]"
}
Timeout(const char *,const char *) {
   english="Timeout received while sending %s request to %s environment"
   french="Délai expiré durant l'envoi de la requête %s vers l'environnement %s"
}
