// ################################################################################
// #
// # File:        G:/bin/p530/src/img/idl\inputmgr_soap_tie.hh (the SOAP TIE Header file)
// # Description: Harmonizes TIE implementation classes in a Multi-ORB environment
// #
// # This file has been generated by the SOAP generator on 15 Nov 2013.
// # Do not delete it or edit it since changes will be 
// # lost when next generation happens.
// #
// ################################################################################

#ifndef _SCS_INPUTMGR_SOAP_TIE_HH_
#define _SCS_INPUTMGR_SOAP_TIE_HH_

#include <inputmgr_soap.hh>

template<class T_SOAP> class InputMgrSOAP_TIE : public InputMgrSOAP {

 public:

   // ctor
   InputMgrSOAP_TIE(T_SOAP * objp) : InputMgrSOAP(), m_obj(objp), m_rel(1) {
   }

   // dtor
   virtual ~InputMgrSOAP_TIE() {
     if(m_rel) delete m_obj;
   }

   char * scs_implementation(void)
     throw(CORBA::SystemException) {
     return m_obj->scs_implementation();
   }
   char * scs_host(void)
     throw(CORBA::SystemException) {
     return m_obj->scs_host();
   }
   void   isAlive(void)
     throw(CORBA::SystemException) {
     m_obj->isAlive();
   }

   static InputMgrIdl_ptr _narrow(CORBA::Object_ptr p) {
     return InputMgrIdl::_narrow(p);
   }

   // IDL operations

   virtual ScsStatusIdl InputMgr_failOver()
     throw(CORBA::SystemException) {
     return m_obj->InputMgr_failOver();
   }

   virtual ScsStatusIdl InputMgr_switchOver()
     throw(CORBA::SystemException) {
     return m_obj->InputMgr_switchOver();
   }

   virtual ScsStatusIdl readSnapshot()
     throw(CORBA::SystemException) {
     return m_obj->readSnapshot();
   }

   virtual void standbyEnvironmentUp()
     throw(CORBA::SystemException) {
     m_obj->standbyEnvironmentUp();
   }

   virtual void updateTime(ScsProcessIdl_ptr  source, 
                           ScsProcessIdl_ptr  destination, 
                           const ScsMessageTag& tag, 
                           const ScsTimeValIdl& onlineTime)
     throw(CORBA::SystemException) {
     m_obj->updateTime(source, 
                       destination, 
                       tag, 
                       onlineTime);
   }

   virtual void printMsgOn(const char * tty)
     throw(CORBA::SystemException) {
     m_obj->printMsgOn(tty);
   }

   virtual void printMsgOff()
     throw(CORBA::SystemException) {
     m_obj->printMsgOff();
   }

   virtual ScsStatusIdl dump(ImgListLengthList_out valueList, 
                             CORBA::Boolean showContents)
     throw(CORBA::SystemException) {
     return m_obj->dump(valueList, 
                        showContents);
   }



 private:

   T_SOAP * m_obj;
   CORBA::Boolean m_rel;

   InputMgrSOAP_TIE(const InputMgrSOAP_TIE<T_SOAP>&){}
   void operator=(const InputMgrSOAP_TIE<T_SOAP>&){}

};


#define DEF_TIE_SOAP_InputMgrIdl(X)\
   typedef InputMgrSOAP_TIE<X> InputMgrSOAP_TIE##X;

#define TIE_SOAP_InputMgrIdl(X) InputMgrSOAP_TIE##X

#endif
