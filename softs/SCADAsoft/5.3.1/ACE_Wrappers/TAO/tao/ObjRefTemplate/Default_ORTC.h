// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler v1.6a_p10 ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be\be_codegen.cpp:135

#ifndef _TAO_PIDL_OBJREFTEMPLATE_DEFAULT_ORTC_H_
#define _TAO_PIDL_OBJREFTEMPLATE_DEFAULT_ORTC_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "tao/ObjRefTemplate/ort_export.h"
#include "tao/Valuetype/ValueBase.h"
#include "tao/Valuetype/Valuetype_Adapter_Factory_Impl.h"
#include "tao/Basic_Types.h"
#include "tao/Valuetype/Value_VarOut_T.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "tao/ObjRefTemplate/ObjectReferenceTemplate_includeC.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_ORT_Export

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_module/module_ch.cpp:49

namespace TAO_Default_ORT
{
  
  // TAO_IDL - Generated from
  // be\be_valuetype.cpp:568
  
  

#if !defined (_TAO_DEFAULT_ORT_OBJECTREFERENCETEMPLATE__VAR_OUT_CH_)
#define _TAO_DEFAULT_ORT_OBJECTREFERENCETEMPLATE__VAR_OUT_CH_
  
  class ObjectReferenceTemplate;
  typedef
    TAO_Value_Var_T<
        ObjectReferenceTemplate
      >
    ObjectReferenceTemplate_var;
  
  typedef
    TAO_Value_Out_T<
        ObjectReferenceTemplate
      >
    ObjectReferenceTemplate_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_valuetype/valuetype_ch.cpp:61

#if !defined (_TAO_DEFAULT_ORT_OBJECTREFERENCETEMPLATE_CH_)
#define _TAO_DEFAULT_ORT_OBJECTREFERENCETEMPLATE_CH_
  
  class TAO_ORT_Export ObjectReferenceTemplate
    : public virtual PortableInterceptor::ObjectReferenceTemplate
  {
  public:
    typedef ObjectReferenceTemplate * _ptr_type;
    typedef ObjectReferenceTemplate_var _var_type;
    typedef ObjectReferenceTemplate_out _out_type;
    
    static ObjectReferenceTemplate* _downcast ( ::CORBA::ValueBase *v);
    
    // (TAO extensions or internals)
    static ::CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &strm,
        ObjectReferenceTemplate *&new_object
      );
    
    virtual const char* _tao_obv_repository_id (void) const;
    
    virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;
    
    static const char* _tao_obv_static_repository_id (void);
    
    static void _tao_any_destructor (void *);
    
    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_valuetype/valuetype_ch.cpp:257
  
  protected:
    ObjectReferenceTemplate (void);
    virtual ~ObjectReferenceTemplate (void);
    
    virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
    virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
    virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
    
  private:
    ObjectReferenceTemplate (const ObjectReferenceTemplate &);
    void operator= (const ObjectReferenceTemplate &);
    
  protected:
    virtual ::CORBA::Boolean
    _tao_marshal__TAO_Default_ORT_ObjectReferenceTemplate (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;
    
    virtual ::CORBA::Boolean
    _tao_unmarshal__TAO_Default_ORT_ObjectReferenceTemplate (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
  };

#endif /* end #if !defined */

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_module/module_ch.cpp:78

} // module TAO_Default_ORT

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_valuetype/obv_module.cpp:55

namespace OBV_TAO_Default_ORT
{
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_valuetype/valuetype_obv_ch.cpp:58

#if !defined (_TAO_DEFAULT_ORT_OBJECTREFERENCETEMPLATE___OBV_CH_)
#define _TAO_DEFAULT_ORT_OBJECTREFERENCETEMPLATE___OBV_CH_
  
  // OBV_ class
  class TAO_ORT_Export ObjectReferenceTemplate
    : public virtual TAO_Default_ORT::ObjectReferenceTemplate
  {

protected:
  ObjectReferenceTemplate (void);
  virtual ~ObjectReferenceTemplate (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__TAO_Default_ORT_ObjectReferenceTemplate (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  
  virtual ::CORBA::Boolean
  _tao_unmarshal__TAO_Default_ORT_ObjectReferenceTemplate (TAO_InputCDR &, TAO_ChunkInfo &);
  
  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  CORBA::Boolean require_truncation_;
};

#endif /* end #if !defined */
}

// TAO_IDL - Generated from
// be\be_visitor_traits.cpp:64


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_TAO_DEFAULT_ORT_OBJECTREFERENCETEMPLATE__TRAITS_)
#define _TAO_DEFAULT_ORT_OBJECTREFERENCETEMPLATE__TRAITS_
  
  template<>
  struct TAO_ORT_Export Value_Traits<TAO_Default_ORT::ObjectReferenceTemplate>
  {
    static void add_ref (TAO_Default_ORT::ObjectReferenceTemplate *);
    static void remove_ref (TAO_Default_ORT::ObjectReferenceTemplate *);
    static void release (TAO_Default_ORT::ObjectReferenceTemplate *);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be\be_valuetype.cpp:461



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern TAO_ORT_Export void add_ref (TAO_Default_ORT::ObjectReferenceTemplate *);
  extern TAO_ORT_Export void remove_ref (TAO_Default_ORT::ObjectReferenceTemplate *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_valuetype/cdr_op_ch.cpp:61



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_ORT_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const TAO_Default_ORT::ObjectReferenceTemplate *);
TAO_ORT_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, TAO_Default_ORT::ObjectReferenceTemplate *&);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be\be_codegen.cpp:1228


TAO_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "Default_ORTC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */


