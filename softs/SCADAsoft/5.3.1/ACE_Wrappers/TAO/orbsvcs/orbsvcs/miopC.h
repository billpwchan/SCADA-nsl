// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler v1.6a_p10 ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be\be_codegen.cpp:135

#ifndef _TAO_IDL_MIOPC_H_
#define _TAO_IDL_MIOPC_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "orbsvcs/PortableGroup/portablegroup_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/ORB.h"
#include "tao/Basic_Types.h"
#include "tao/String_Manager_T.h"
#include "tao/AnyTypeCode/IOPA.h"
#include "tao/AnyTypeCode/GIOPA.h"
#include "tao/Sequence_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Array_VarOut_T.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "tao/IOPC.h"
#include "tao/GIOPC.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_PortableGroup_Export

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_module/module_ch.cpp:49

namespace MIOP
{
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:107

#if !defined (_MIOP_UNIQUEID_CH_)
#define _MIOP_UNIQUEID_CH_
  
  class UniqueId;
  
  typedef
    TAO_FixedSeq_Var_T<
        UniqueId
      >
    UniqueId_var;
  
  typedef
    TAO_Seq_Out_T<
        UniqueId
      >
    UniqueId_out;
  
  class TAO_PortableGroup_Export UniqueId
    : public
        TAO::bounded_value_sequence<
            ::CORBA::Octet,
            252
          >
  {
  public:
    UniqueId (void);
    UniqueId (
        ::CORBA::ULong length,
        ::CORBA::Octet* buffer, 
        ::CORBA::Boolean release = false
      );
    UniqueId (const UniqueId &);
    virtual ~UniqueId (void);
    
    static void _tao_any_destructor (void *);
    
    typedef UniqueId_var _var_type;
    typedef UniqueId_out _out_type;
    
    
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_PortableGroup_Export ::CORBA::TypeCode_ptr const _tc_UniqueId;
  
  // TAO_IDL - Generated from
  // be\be_type.cpp:269
  
  struct PacketHeader_1_0;
  
  typedef
    TAO_Var_Var_T<
        PacketHeader_1_0
      >
    PacketHeader_1_0_var;
  
  typedef
    TAO_Out_T<
        PacketHeader_1_0
      >
    PacketHeader_1_0_out;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:57
  
  struct TAO_PortableGroup_Export PacketHeader_1_0
  {
    typedef PacketHeader_1_0_var _var_type;
    typedef PacketHeader_1_0_out _out_type;
    
    static void _tao_any_destructor (void *);
    
    
    // TAO_IDL - Generated from 
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_array/array_ch.cpp:62

#if !defined (_MIOP_PACKETHEADER_1_0_MAGIC_CH_)
#define _MIOP_PACKETHEADER_1_0_MAGIC_CH_
    
    typedef ::CORBA::Char _magic[4];
    typedef ::CORBA::Char _magic_slice;
    struct _magic_tag {};
    
    
    typedef
      TAO_Array_Forany_T<
          _magic,
          _magic_slice,
          _magic_tag
        >
      _magic_forany;
    
    static _magic_slice *
    _magic_alloc (void);
    
    static void
    _magic_free (
        _magic_slice *_tao_slice
      );
    
    static _magic_slice *
    _magic_dup (
        const _magic_slice *_tao_slice
      );
    
    static void
    _magic_copy (
        _magic_slice *_tao_to,
        const _magic_slice *_tao_from
      );

#endif /* end #if !defined */
    
    _magic magic;
    ::CORBA::Octet hdr_version;
    ::CORBA::Octet flags;
    ::CORBA::UShort packet_length;
    ::CORBA::ULong packet_number;
    ::CORBA::ULong number_of_packets;
    MIOP::UniqueId Id;
  };
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_PortableGroup_Export ::CORBA::TypeCode_ptr const _tc_PacketHeader_1_0;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:519
  
  typedef GIOP::Version Version;
  typedef GIOP::Version_var Version_var;
  typedef GIOP::Version_out Version_out;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_PortableGroup_Export ::CORBA::TypeCode_ptr const _tc_Version;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typedef/typedef_ch.cpp:413
  
  typedef char * Address;
  typedef ::CORBA::String_var Address_var;
  typedef ::CORBA::String_out Address_out;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_PortableGroup_Export ::CORBA::TypeCode_ptr const _tc_Address;
  
  // TAO_IDL - Generated from
  // be\be_type.cpp:269
  
  struct UIPMC_ProfileBody;
  
  typedef
    TAO_Var_Var_T<
        UIPMC_ProfileBody
      >
    UIPMC_ProfileBody_var;
  
  typedef
    TAO_Out_T<
        UIPMC_ProfileBody
      >
    UIPMC_ProfileBody_out;
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:57
  
  struct TAO_PortableGroup_Export UIPMC_ProfileBody
  {
    typedef UIPMC_ProfileBody_var _var_type;
    typedef UIPMC_ProfileBody_out _out_type;
    
    static void _tao_any_destructor (void *);
    MIOP::Version miop_version;
    TAO::String_Manager the_address;
    ::CORBA::Short the_port;
    
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:107

#if !defined (_MIOP_UIPMC_PROFILEBODY__TAO_SEQ_IOP_TAGGEDCOMPONENT__CH_)
#define _MIOP_UIPMC_PROFILEBODY__TAO_SEQ_IOP_TAGGEDCOMPONENT__CH_
    
    class TAO_PortableGroup_Export _tao_seq_IOP_TaggedComponent_
      : public
          TAO::unbounded_value_sequence<
              IOP::TaggedComponent
            >
    {
    public:
      _tao_seq_IOP_TaggedComponent_ (void);
      _tao_seq_IOP_TaggedComponent_ ( ::CORBA::ULong max);
      _tao_seq_IOP_TaggedComponent_ (
          ::CORBA::ULong max,
          ::CORBA::ULong length,
          IOP::TaggedComponent* buffer, 
          ::CORBA::Boolean release = false
        );
      _tao_seq_IOP_TaggedComponent_ (const _tao_seq_IOP_TaggedComponent_ &);
      virtual ~_tao_seq_IOP_TaggedComponent_ (void);
    };

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_field/field_ch.cpp:358
    
    typedef _tao_seq_IOP_TaggedComponent_ _components_seq;
    _tao_seq_IOP_TaggedComponent_ components;
  };
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_PortableGroup_Export ::CORBA::TypeCode_ptr const _tc_UIPMC_ProfileBody;

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_module/module_ch.cpp:78

} // module MIOP

// TAO_IDL - Generated from
// be\be_visitor_traits.cpp:64


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{
  template<>
  struct TAO_PortableGroup_Export Array_Traits<
      MIOP::PacketHeader_1_0::_magic_forany
    >
  {
    static void free (
        MIOP::PacketHeader_1_0::_magic_slice * _tao_slice
      );
    static MIOP::PacketHeader_1_0::_magic_slice * dup (
        const MIOP::PacketHeader_1_0::_magic_slice * _tao_slice
      );
    static void copy (
        MIOP::PacketHeader_1_0::_magic_slice * _tao_to,
        const MIOP::PacketHeader_1_0::_magic_slice * _tao_from
      );
    static MIOP::PacketHeader_1_0::_magic_slice * alloc (void);
    static void zero (
        MIOP::PacketHeader_1_0::_magic_slice * _tao_slice
      );
  };
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:53



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_PortableGroup_Export void operator<<= ( ::CORBA::Any &, const MIOP::UniqueId &); // copying version
TAO_PortableGroup_Export void operator<<= ( ::CORBA::Any &, MIOP::UniqueId*); // noncopying version
TAO_PortableGroup_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, MIOP::UniqueId *&); // deprecated
TAO_PortableGroup_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const MIOP::UniqueId *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:53



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_PortableGroup_Export void operator<<= (::CORBA::Any &, const MIOP::PacketHeader_1_0 &); // copying version
TAO_PortableGroup_Export void operator<<= (::CORBA::Any &, MIOP::PacketHeader_1_0*); // noncopying version
TAO_PortableGroup_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, MIOP::PacketHeader_1_0 *&); // deprecated
TAO_PortableGroup_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const MIOP::PacketHeader_1_0 *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:53



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_PortableGroup_Export void operator<<= (::CORBA::Any &, const MIOP::UIPMC_ProfileBody &); // copying version
TAO_PortableGroup_Export void operator<<= (::CORBA::Any &, MIOP::UIPMC_ProfileBody*); // noncopying version
TAO_PortableGroup_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, MIOP::UIPMC_ProfileBody *&); // deprecated
TAO_PortableGroup_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const MIOP::UIPMC_ProfileBody *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_MIOP_UniqueId_H_
#define _TAO_CDR_OP_MIOP_UniqueId_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_PortableGroup_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const MIOP::UniqueId &_tao_sequence
  );
TAO_PortableGroup_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    MIOP::UniqueId &_tao_sequence
  );
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_MIOP_UniqueId_H_ */

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:54



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_PortableGroup_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const MIOP::PacketHeader_1_0 &);
TAO_PortableGroup_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, MIOP::PacketHeader_1_0 &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_array/cdr_op_ch.cpp:116



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_PortableGroup_Export CORBA::Boolean operator<< (TAO_OutputCDR &strm, const MIOP::PacketHeader_1_0::_magic_forany &_tao_array);
TAO_PortableGroup_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, MIOP::PacketHeader_1_0::_magic_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:54



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_PortableGroup_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const MIOP::UIPMC_ProfileBody &);
TAO_PortableGroup_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, MIOP::UIPMC_ProfileBody &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_MIOP_UIPMC_ProfileBody__tao_seq_IOP_TaggedComponent__H_
#define _TAO_CDR_OP_MIOP_UIPMC_ProfileBody__tao_seq_IOP_TaggedComponent__H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_PortableGroup_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const MIOP::UIPMC_ProfileBody::_tao_seq_IOP_TaggedComponent_ &_tao_sequence
  );
TAO_PortableGroup_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    MIOP::UIPMC_ProfileBody::_tao_seq_IOP_TaggedComponent_ &_tao_sequence
  );
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_MIOP_UIPMC_ProfileBody__tao_seq_IOP_TaggedComponent__H_ */

// TAO_IDL - Generated from
// be\be_codegen.cpp:1228


TAO_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "miopC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */


