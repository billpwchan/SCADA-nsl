// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler v1.6a_p10 ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be\be_codegen.cpp:135

#ifndef _TAO_IDL_COSTYPEDEVENTCOMMC_H_
#define _TAO_IDL_COSTYPEDEVENTCOMMC_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "orbsvcs/CosEvent/event_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/Objref_VarOut_T.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "CosEventCommC.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_Event_Export

// TAO_IDL - Generated from 
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_root/root_ch.cpp:62
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  class Collocation_Proxy_Broker;
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_module/module_ch.cpp:49

namespace CosTypedEventComm
{
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:644

#if !defined (_COSTYPEDEVENTCOMM_TYPEDPUSHCONSUMER__VAR_OUT_CH_)
#define _COSTYPEDEVENTCOMM_TYPEDPUSHCONSUMER__VAR_OUT_CH_
  
  class TypedPushConsumer;
  typedef TypedPushConsumer *TypedPushConsumer_ptr;
  
  typedef
    TAO_Objref_Var_T<
        TypedPushConsumer
      >
    TypedPushConsumer_var;
  
  typedef
    TAO_Objref_Out_T<
        TypedPushConsumer
      >
    TypedPushConsumer_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_COSTYPEDEVENTCOMM_TYPEDPUSHCONSUMER_CH_)
#define _COSTYPEDEVENTCOMM_TYPEDPUSHCONSUMER_CH_
  
  class TAO_Event_Export TypedPushConsumer
    : public virtual ::CosEventComm::PushConsumer
  {
  public:
    friend class TAO::Narrow_Utils<TypedPushConsumer>;
    typedef TypedPushConsumer_ptr _ptr_type;
    typedef TypedPushConsumer_var _var_type;
    typedef TypedPushConsumer_out _out_type;
    
    // The static operations.
    static TypedPushConsumer_ptr _duplicate (TypedPushConsumer_ptr obj);
    
    static void _tao_release (TypedPushConsumer_ptr obj);
    
    static TypedPushConsumer_ptr _narrow (::CORBA::Object_ptr obj);
    static TypedPushConsumer_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static TypedPushConsumer_ptr _nil (void)
    {
      return static_cast<TypedPushConsumer_ptr> (0);
    }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::Object_ptr get_typed_consumer (
        void);
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:216
    
    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_TypedPushConsumer_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    TypedPushConsumer (void);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosTypedEventComm_TypedPushConsumer_setup_collocation (void);
    
    // Concrete non-local interface only.
    TypedPushConsumer (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    TypedPushConsumer (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);
    
    virtual ~TypedPushConsumer (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    TypedPushConsumer (const TypedPushConsumer &);
    
    void operator= (const TypedPushConsumer &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_Event_Export ::CORBA::TypeCode_ptr const _tc_TypedPushConsumer;
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:644

#if !defined (_COSTYPEDEVENTCOMM_TYPEDPULLSUPPLIER__VAR_OUT_CH_)
#define _COSTYPEDEVENTCOMM_TYPEDPULLSUPPLIER__VAR_OUT_CH_
  
  class TypedPullSupplier;
  typedef TypedPullSupplier *TypedPullSupplier_ptr;
  
  typedef
    TAO_Objref_Var_T<
        TypedPullSupplier
      >
    TypedPullSupplier_var;
  
  typedef
    TAO_Objref_Out_T<
        TypedPullSupplier
      >
    TypedPullSupplier_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_COSTYPEDEVENTCOMM_TYPEDPULLSUPPLIER_CH_)
#define _COSTYPEDEVENTCOMM_TYPEDPULLSUPPLIER_CH_
  
  class TAO_Event_Export TypedPullSupplier
    : public virtual ::CosEventComm::PullSupplier
  {
  public:
    friend class TAO::Narrow_Utils<TypedPullSupplier>;
    typedef TypedPullSupplier_ptr _ptr_type;
    typedef TypedPullSupplier_var _var_type;
    typedef TypedPullSupplier_out _out_type;
    
    // The static operations.
    static TypedPullSupplier_ptr _duplicate (TypedPullSupplier_ptr obj);
    
    static void _tao_release (TypedPullSupplier_ptr obj);
    
    static TypedPullSupplier_ptr _narrow (::CORBA::Object_ptr obj);
    static TypedPullSupplier_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static TypedPullSupplier_ptr _nil (void)
    {
      return static_cast<TypedPullSupplier_ptr> (0);
    }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::Object_ptr get_typed_supplier (
        void);
    
    // TAO_IDL - Generated from
    // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:216
    
    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_TypedPullSupplier_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    TypedPullSupplier (void);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CosTypedEventComm_TypedPullSupplier_setup_collocation (void);
    
    // Concrete non-local interface only.
    TypedPullSupplier (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    TypedPullSupplier (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);
    
    virtual ~TypedPullSupplier (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    TypedPullSupplier (const TypedPullSupplier &);
    
    void operator= (const TypedPullSupplier &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_Event_Export ::CORBA::TypeCode_ptr const _tc_TypedPullSupplier;

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_module/module_ch.cpp:78

} // module CosTypedEventComm

// Proxy Broker Factory function pointer declarations.

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_root/root.cpp:139

extern TAO_Event_Export
TAO::Collocation_Proxy_Broker *
(*CosTypedEventComm__TAO_TypedPushConsumer_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj
  );

extern TAO_Event_Export
TAO::Collocation_Proxy_Broker *
(*CosTypedEventComm__TAO_TypedPullSupplier_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj
  );

// TAO_IDL - Generated from
// be\be_visitor_traits.cpp:64

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_COSTYPEDEVENTCOMM_TYPEDPUSHCONSUMER__TRAITS_)
#define _COSTYPEDEVENTCOMM_TYPEDPUSHCONSUMER__TRAITS_
  
  template<>
  struct TAO_Event_Export Objref_Traits< ::CosTypedEventComm::TypedPushConsumer>
  {
    static ::CosTypedEventComm::TypedPushConsumer_ptr duplicate (
        ::CosTypedEventComm::TypedPushConsumer_ptr p
      );
    static void release (
        ::CosTypedEventComm::TypedPushConsumer_ptr p
      );
    static ::CosTypedEventComm::TypedPushConsumer_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosTypedEventComm::TypedPushConsumer_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_COSTYPEDEVENTCOMM_TYPEDPULLSUPPLIER__TRAITS_)
#define _COSTYPEDEVENTCOMM_TYPEDPULLSUPPLIER__TRAITS_
  
  template<>
  struct TAO_Event_Export Objref_Traits< ::CosTypedEventComm::TypedPullSupplier>
  {
    static ::CosTypedEventComm::TypedPullSupplier_ptr duplicate (
        ::CosTypedEventComm::TypedPullSupplier_ptr p
      );
    static void release (
        ::CosTypedEventComm::TypedPullSupplier_ptr p
      );
    static ::CosTypedEventComm::TypedPullSupplier_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CosTypedEventComm::TypedPullSupplier_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:54



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosTypedEventComm
{
  TAO_Event_Export void operator<<= ( ::CORBA::Any &, TypedPushConsumer_ptr); // copying
  TAO_Event_Export void operator<<= ( ::CORBA::Any &, TypedPushConsumer_ptr *); // non-copying
  TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TypedPushConsumer_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Event_Export void operator<<= (::CORBA::Any &, CosTypedEventComm::TypedPushConsumer_ptr); // copying
TAO_Event_Export void operator<<= (::CORBA::Any &, CosTypedEventComm::TypedPushConsumer_ptr *); // non-copying
TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTypedEventComm::TypedPushConsumer_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:54



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace CosTypedEventComm
{
  TAO_Event_Export void operator<<= ( ::CORBA::Any &, TypedPullSupplier_ptr); // copying
  TAO_Event_Export void operator<<= ( ::CORBA::Any &, TypedPullSupplier_ptr *); // non-copying
  TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TypedPullSupplier_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Event_Export void operator<<= (::CORBA::Any &, CosTypedEventComm::TypedPullSupplier_ptr); // copying
TAO_Event_Export void operator<<= (::CORBA::Any &, CosTypedEventComm::TypedPullSupplier_ptr *); // non-copying
TAO_Event_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, CosTypedEventComm::TypedPullSupplier_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Event_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosTypedEventComm::TypedPushConsumer_ptr );
TAO_Event_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosTypedEventComm::TypedPushConsumer_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\softs\ace_wrappers_vc10\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Event_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CosTypedEventComm::TypedPullSupplier_ptr );
TAO_Event_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CosTypedEventComm::TypedPullSupplier_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_codegen.cpp:1228
#if defined (__ACE_INLINE__)
#include "CosTypedEventCommC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */


