COMPONENT=Lst,Lst

Init() {
   english="LstServer Initialization"
   french="Initialisation du serveur Lst"
}

ORB(const char*) {
   english="Orb Error %s"
   french="Erreur Orb %s"
}

HostServer(const char*) {
   english="Server %s is not registered at the naming server"
   french="Le server %s n'est pas enregistre aupres du server de nom"
}

CreatorId(int) {
   english="The creator identificator n°%d is not valid"
   french="L'identifiant de creation n°%d n'est pas correct"
}

ListName(const char*) {
   english="The list name %s is not valid"
   french="Le nom %s donne a la liste n'est pas correct"
}

NameAlreadyExists(const char*) {
   english="The list name %s already exists"
   french="Le nom %s donne a la liste existe deja"
}

ListNotFound(const char*) {
   english="The list %s could not be reached"
   french="Impossible de trouver la liste %s"
}

MaxList() {
   english="The maximum number of lists has been reached"
   french="Le nombre maximum de listes est atteint"
}

BadListType() {
   english="The reached list is not of the wished type"
   french="La liste trouvee n'est pas du bon type"
}

AddEntry() {
   english="Impossible to add the new entry"
   french="Impossible d'ajouter la nouvelle entree"
}

DeleteEntry() {
   english="Impossible to delete the wished entry"
   french="Impossible de supprimer l'entree desiree"
}

RemoteAllocation() {
   english="A remote parameter has no memory allocated"
   french="Un parametre distant n'a pas de memoire allouee"
}

ActionNotAllowed() {
   english="The wished action is not allowed on this list (creatorId/creationMode)"
   french="L'action desiree n'est pas autorisee sur cette liste (creatorId/creationMode)"
}

ListNotErasable() {
   english="The wished list is not erasable"
   french="La liste desiree n'est pas effacable"
}

ListNotModifiable() {
   english="The wished is not modifiable"
   french="La liste desiree n'est pas modifiable"
}

UpdateData() {
   english="Error while adding an element in data structures"
   french="Erreur lors de l'insertion d'un element dans les structures de données"
}

UpdateCondition() {
   english="Error while adding an element in condition structures"
   french="Erreur lors de l'insertion d'un element dans les structures de condition"
}

Clean() {
   english="Error while cleaning index structures"
   french="Erreur lors du nettoyage des structures d'indexation"
}

ListLists() {
   english="Impossible to build the list of the lists"
   french="Impossible de construire la liste des listes"
}

DeactivatingANotActivatedList() {
   english="Trying to deactivate a list which has not been activated"
   french="Tentative de desactivation d'une liste non activee"
}

StateListCreation() {
   english="Error while creating the state list"
   french="Erreur lors de la creation de la liste d'etat"
}

UserListCreation() {
   english="Error while creating the user list"
   french="Erreur lors de la creation de la liste a la demande"
}

XmlSave(const char*) {
   english="Error while XML saving list %s"
   french="Erreur lors de la sauvegarde XML de la liste %s"
}

NoStateListAttribute() {
   english="Cannot create a StateList without any attribute addresses"
   french="Impossible de creer une liste d'etat sans adresse d'attribut"
}

ListDeactivation() {
   english="Cannot deactivate a list while activating it"
   french="Impossible de desactiver une liste pendant son activation"
}