// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler v1.6a_p15 ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be\be_codegen.cpp:135

#ifndef _TAO_PIDL_PORTABLESERVER_POAC_H_
#define _TAO_PIDL_PORTABLESERVER_POAC_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "tao/PortableServer/portableserver_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/SystemException.h"
#include "tao/UserException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/AnyTypeCode/Policy_ForwardA.h"
#include "tao/AnyTypeCode/OctetSeqA.h"
#include "tao/AnyTypeCode/orb_typesA.h"
#include "tao/PortableServer/PS_ForwardA.h"
#include "tao/PortableServer/IdAssignmentPolicyA.h"
#include "tao/PortableServer/IdUniquenessPolicyA.h"
#include "tao/PortableServer/ImplicitActivationPolicyA.h"
#include "tao/PortableServer/LifespanPolicyA.h"
#include "tao/PortableServer/RequestProcessingPolicyA.h"
#include "tao/PortableServer/ServantRetentionPolicyA.h"
#include "tao/PortableServer/ThreadPolicyA.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "tao/Policy_ForwardC.h"
#include "tao/OctetSeqC.h"
#include "tao/orb_typesC.h"
#include "tao/PortableServer/PS_ForwardC.h"
#include "tao/PortableServer/IdAssignmentPolicyC.h"
#include "tao/PortableServer/IdUniquenessPolicyC.h"
#include "tao/PortableServer/ImplicitActivationPolicyC.h"
#include "tao/PortableServer/LifespanPolicyC.h"
#include "tao/PortableServer/RequestProcessingPolicyC.h"
#include "tao/PortableServer/ServantRetentionPolicyC.h"
#include "tao/PortableServer/ThreadPolicyC.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_PortableServer_Export

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:49

namespace PortableServer
{
  
  // TAO_IDL - Generated from
  // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:107

#if !defined (_PORTABLESERVER_POALIST_CH_)
#define _PORTABLESERVER_POALIST_CH_
  
  class POAList;
  
  typedef
    TAO_VarSeq_Var_T<
        POAList
      >
    POAList_var;
  
  typedef
    TAO_Seq_Out_T<
        POAList
      >
    POAList_out;
  
  class TAO_PortableServer_Export POAList
    : public
        TAO::unbounded_object_reference_sequence<
            POA,
            POA_var
          >
  {
  public:
    POAList (void);
    POAList ( ::CORBA::ULong max);
    POAList (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        POA_ptr* buffer, 
        ::CORBA::Boolean release = false
      );
    POAList (const POAList &);
    virtual ~POAList (void);
    
    static void _tao_any_destructor (void *);
    
    typedef POAList_var _var_type;
    typedef POAList_out _out_type;
    
    
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_PortableServer_Export ::CORBA::TypeCode_ptr const _tc_POAList;
  
  // TAO_IDL - Generated from
  // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:52
  
  const CORBA::PolicyType THREAD_POLICY_ID = 16U;
  
  // TAO_IDL - Generated from
  // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:52
  
  const CORBA::PolicyType LIFESPAN_POLICY_ID = 17U;
  
  // TAO_IDL - Generated from
  // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:52
  
  const CORBA::PolicyType ID_UNIQUENESS_POLICY_ID = 18U;
  
  // TAO_IDL - Generated from
  // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:52
  
  const CORBA::PolicyType ID_ASSIGNMENT_POLICY_ID = 19U;
  
  // TAO_IDL - Generated from
  // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:52
  
  const CORBA::PolicyType IMPLICIT_ACTIVATION_POLICY_ID = 20U;
  
  // TAO_IDL - Generated from
  // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:52
  
  const CORBA::PolicyType SERVANT_RETENTION_POLICY_ID = 21U;
  
  // TAO_IDL - Generated from
  // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_constant/constant_ch.cpp:52
  
  const CORBA::PolicyType REQUEST_PROCESSING_POLICY_ID = 22U;
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:644

#if !defined (_PORTABLESERVER_POAMANAGER__VAR_OUT_CH_)
#define _PORTABLESERVER_POAMANAGER__VAR_OUT_CH_
  
  class POAManager;
  typedef POAManager *POAManager_ptr;
  
  typedef
    TAO_Objref_Var_T<
        POAManager
      >
    POAManager_var;
  
  typedef
    TAO_Objref_Out_T<
        POAManager
      >
    POAManager_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:644

#if !defined (_PORTABLESERVER_POAMANAGERFACTORY__VAR_OUT_CH_)
#define _PORTABLESERVER_POAMANAGERFACTORY__VAR_OUT_CH_
  
  class POAManagerFactory;
  typedef POAManagerFactory *POAManagerFactory_ptr;
  
  typedef
    TAO_Objref_Var_T<
        POAManagerFactory
      >
    POAManagerFactory_var;
  
  typedef
    TAO_Objref_Out_T<
        POAManagerFactory
      >
    POAManagerFactory_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:644

#if !defined (_PORTABLESERVER_ADAPTERACTIVATOR__VAR_OUT_CH_)
#define _PORTABLESERVER_ADAPTERACTIVATOR__VAR_OUT_CH_
  
  class AdapterActivator;
  typedef AdapterActivator *AdapterActivator_ptr;
  
  typedef
    TAO_Objref_Var_T<
        AdapterActivator
      >
    AdapterActivator_var;
  
  typedef
    TAO_Objref_Out_T<
        AdapterActivator
      >
    AdapterActivator_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:644

#if !defined (_PORTABLESERVER_SERVANTMANAGER__VAR_OUT_CH_)
#define _PORTABLESERVER_SERVANTMANAGER__VAR_OUT_CH_
  
  class ServantManager;
  typedef ServantManager *ServantManager_ptr;
  
  typedef
    TAO_Objref_Var_T<
        ServantManager
      >
    ServantManager_var;
  
  typedef
    TAO_Objref_Out_T<
        ServantManager
      >
    ServantManager_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:644

#if !defined (_PORTABLESERVER_POA__VAR_OUT_CH_)
#define _PORTABLESERVER_POA__VAR_OUT_CH_
  
  class POA;
  typedef POA *POA_ptr;
  
  typedef
    TAO_Objref_Var_T<
        POA
      >
    POA_var;
  
  typedef
    TAO_Objref_Out_T<
        POA
      >
    POA_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_PORTABLESERVER_POA_CH_)
#define _PORTABLESERVER_POA_CH_
  
  class TAO_PortableServer_Export POA
    : public virtual ::CORBA::Object
  {
  public:
    typedef POA_ptr _ptr_type;
    typedef POA_var _var_type;
    typedef POA_out _out_type;
    
    // The static operations.
    static POA_ptr _duplicate (POA_ptr obj);
    
    static void _tao_release (POA_ptr obj);
    
    static POA_ptr _narrow (::CORBA::Object_ptr obj);
    static POA_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static POA_ptr _nil (void)
    {
      return static_cast<POA_ptr> (0);
    }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:53

#if !defined (_PORTABLESERVER_POA_ADAPTERALREADYEXISTS_CH_)
#define _PORTABLESERVER_POA_ADAPTERALREADYEXISTS_CH_
    
    class TAO_PortableServer_Export AdapterAlreadyExists : public ::CORBA::UserException
    {
    public:
      
      AdapterAlreadyExists (void);
      AdapterAlreadyExists (const AdapterAlreadyExists &);
      ~AdapterAlreadyExists (void);

      AdapterAlreadyExists &operator= (const AdapterAlreadyExists &);
      
      static void _tao_any_destructor (void *);
      
      static AdapterAlreadyExists *_downcast ( ::CORBA::Exception *);
      static const AdapterAlreadyExists *_downcast ( ::CORBA::Exception const *);
      
      static ::CORBA::Exception *_alloc (void);
      
      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      
      
      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
    
    static ::CORBA::TypeCode_ptr const _tc_AdapterAlreadyExists;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:53

#if !defined (_PORTABLESERVER_POA_ADAPTERNONEXISTENT_CH_)
#define _PORTABLESERVER_POA_ADAPTERNONEXISTENT_CH_
    
    class TAO_PortableServer_Export AdapterNonExistent : public ::CORBA::UserException
    {
    public:
      
      AdapterNonExistent (void);
      AdapterNonExistent (const AdapterNonExistent &);
      ~AdapterNonExistent (void);

      AdapterNonExistent &operator= (const AdapterNonExistent &);
      
      static void _tao_any_destructor (void *);
      
      static AdapterNonExistent *_downcast ( ::CORBA::Exception *);
      static const AdapterNonExistent *_downcast ( ::CORBA::Exception const *);
      
      static ::CORBA::Exception *_alloc (void);
      
      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      
      
      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
    
    static ::CORBA::TypeCode_ptr const _tc_AdapterNonExistent;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:53

#if !defined (_PORTABLESERVER_POA_INVALIDPOLICY_CH_)
#define _PORTABLESERVER_POA_INVALIDPOLICY_CH_
    
    class TAO_PortableServer_Export InvalidPolicy : public ::CORBA::UserException
    {
    public:
      
      ::CORBA::UShort index;
      InvalidPolicy (void);
      InvalidPolicy (const InvalidPolicy &);
      ~InvalidPolicy (void);

      InvalidPolicy &operator= (const InvalidPolicy &);
      
      static void _tao_any_destructor (void *);
      
      static InvalidPolicy *_downcast ( ::CORBA::Exception *);
      static const InvalidPolicy *_downcast ( ::CORBA::Exception const *);
      
      static ::CORBA::Exception *_alloc (void);
      
      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      
      
      // TAO_IDL - Generated from
      // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ctor.cpp:66
      
      InvalidPolicy (
          ::CORBA::UShort _tao_index
        );
      
      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
    
    static ::CORBA::TypeCode_ptr const _tc_InvalidPolicy;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:53

#if !defined (_PORTABLESERVER_POA_NOSERVANT_CH_)
#define _PORTABLESERVER_POA_NOSERVANT_CH_
    
    class TAO_PortableServer_Export NoServant : public ::CORBA::UserException
    {
    public:
      
      NoServant (void);
      NoServant (const NoServant &);
      ~NoServant (void);

      NoServant &operator= (const NoServant &);
      
      static void _tao_any_destructor (void *);
      
      static NoServant *_downcast ( ::CORBA::Exception *);
      static const NoServant *_downcast ( ::CORBA::Exception const *);
      
      static ::CORBA::Exception *_alloc (void);
      
      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      
      
      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
    
    static ::CORBA::TypeCode_ptr const _tc_NoServant;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:53

#if !defined (_PORTABLESERVER_POA_OBJECTALREADYACTIVE_CH_)
#define _PORTABLESERVER_POA_OBJECTALREADYACTIVE_CH_
    
    class TAO_PortableServer_Export ObjectAlreadyActive : public ::CORBA::UserException
    {
    public:
      
      ObjectAlreadyActive (void);
      ObjectAlreadyActive (const ObjectAlreadyActive &);
      ~ObjectAlreadyActive (void);

      ObjectAlreadyActive &operator= (const ObjectAlreadyActive &);
      
      static void _tao_any_destructor (void *);
      
      static ObjectAlreadyActive *_downcast ( ::CORBA::Exception *);
      static const ObjectAlreadyActive *_downcast ( ::CORBA::Exception const *);
      
      static ::CORBA::Exception *_alloc (void);
      
      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      
      
      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
    
    static ::CORBA::TypeCode_ptr const _tc_ObjectAlreadyActive;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:53

#if !defined (_PORTABLESERVER_POA_OBJECTNOTACTIVE_CH_)
#define _PORTABLESERVER_POA_OBJECTNOTACTIVE_CH_
    
    class TAO_PortableServer_Export ObjectNotActive : public ::CORBA::UserException
    {
    public:
      
      ObjectNotActive (void);
      ObjectNotActive (const ObjectNotActive &);
      ~ObjectNotActive (void);

      ObjectNotActive &operator= (const ObjectNotActive &);
      
      static void _tao_any_destructor (void *);
      
      static ObjectNotActive *_downcast ( ::CORBA::Exception *);
      static const ObjectNotActive *_downcast ( ::CORBA::Exception const *);
      
      static ::CORBA::Exception *_alloc (void);
      
      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      
      
      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
    
    static ::CORBA::TypeCode_ptr const _tc_ObjectNotActive;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:53

#if !defined (_PORTABLESERVER_POA_SERVANTALREADYACTIVE_CH_)
#define _PORTABLESERVER_POA_SERVANTALREADYACTIVE_CH_
    
    class TAO_PortableServer_Export ServantAlreadyActive : public ::CORBA::UserException
    {
    public:
      
      ServantAlreadyActive (void);
      ServantAlreadyActive (const ServantAlreadyActive &);
      ~ServantAlreadyActive (void);

      ServantAlreadyActive &operator= (const ServantAlreadyActive &);
      
      static void _tao_any_destructor (void *);
      
      static ServantAlreadyActive *_downcast ( ::CORBA::Exception *);
      static const ServantAlreadyActive *_downcast ( ::CORBA::Exception const *);
      
      static ::CORBA::Exception *_alloc (void);
      
      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      
      
      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
    
    static ::CORBA::TypeCode_ptr const _tc_ServantAlreadyActive;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:53

#if !defined (_PORTABLESERVER_POA_SERVANTNOTACTIVE_CH_)
#define _PORTABLESERVER_POA_SERVANTNOTACTIVE_CH_
    
    class TAO_PortableServer_Export ServantNotActive : public ::CORBA::UserException
    {
    public:
      
      ServantNotActive (void);
      ServantNotActive (const ServantNotActive &);
      ~ServantNotActive (void);

      ServantNotActive &operator= (const ServantNotActive &);
      
      static void _tao_any_destructor (void *);
      
      static ServantNotActive *_downcast ( ::CORBA::Exception *);
      static const ServantNotActive *_downcast ( ::CORBA::Exception const *);
      
      static ::CORBA::Exception *_alloc (void);
      
      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      
      
      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
    
    static ::CORBA::TypeCode_ptr const _tc_ServantNotActive;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:53

#if !defined (_PORTABLESERVER_POA_WRONGADAPTER_CH_)
#define _PORTABLESERVER_POA_WRONGADAPTER_CH_
    
    class TAO_PortableServer_Export WrongAdapter : public ::CORBA::UserException
    {
    public:
      
      WrongAdapter (void);
      WrongAdapter (const WrongAdapter &);
      ~WrongAdapter (void);

      WrongAdapter &operator= (const WrongAdapter &);
      
      static void _tao_any_destructor (void *);
      
      static WrongAdapter *_downcast ( ::CORBA::Exception *);
      static const WrongAdapter *_downcast ( ::CORBA::Exception const *);
      
      static ::CORBA::Exception *_alloc (void);
      
      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      
      
      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
    
    static ::CORBA::TypeCode_ptr const _tc_WrongAdapter;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_exception/exception_ch.cpp:53

#if !defined (_PORTABLESERVER_POA_WRONGPOLICY_CH_)
#define _PORTABLESERVER_POA_WRONGPOLICY_CH_
    
    class TAO_PortableServer_Export WrongPolicy : public ::CORBA::UserException
    {
    public:
      
      WrongPolicy (void);
      WrongPolicy (const WrongPolicy &);
      ~WrongPolicy (void);

      WrongPolicy &operator= (const WrongPolicy &);
      
      static void _tao_any_destructor (void *);
      
      static WrongPolicy *_downcast ( ::CORBA::Exception *);
      static const WrongPolicy *_downcast ( ::CORBA::Exception const *);
      
      static ::CORBA::Exception *_alloc (void);
      
      virtual ::CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void) const;

      virtual void _tao_encode (TAO_OutputCDR &cdr) const;
      virtual void _tao_decode (TAO_InputCDR &cdr);
      
      
      virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
    };
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
    
    static ::CORBA::TypeCode_ptr const _tc_WrongPolicy;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::PortableServer::POA_ptr create_POA (
        const char * adapter_name,
        ::PortableServer::POAManager_ptr a_POAManager,
        const ::CORBA::PolicyList & policies) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::PortableServer::POA_ptr find_POA (
        const char * adapter_name,
        ::CORBA::Boolean activate_it) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void destroy (
        ::CORBA::Boolean etherealize_objects,
        ::CORBA::Boolean wait_for_completion) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::PortableServer::ThreadPolicy_ptr create_thread_policy (
        ::PortableServer::ThreadPolicyValue value) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::PortableServer::LifespanPolicy_ptr create_lifespan_policy (
        ::PortableServer::LifespanPolicyValue value) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::PortableServer::IdUniquenessPolicy_ptr create_id_uniqueness_policy (
        ::PortableServer::IdUniquenessPolicyValue value) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::PortableServer::IdAssignmentPolicy_ptr create_id_assignment_policy (
        ::PortableServer::IdAssignmentPolicyValue value) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::PortableServer::ImplicitActivationPolicy_ptr create_implicit_activation_policy (
        ::PortableServer::ImplicitActivationPolicyValue value) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::PortableServer::ServantRetentionPolicy_ptr create_servant_retention_policy (
        ::PortableServer::ServantRetentionPolicyValue value) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::PortableServer::RequestProcessingPolicy_ptr create_request_processing_policy (
        ::PortableServer::RequestProcessingPolicyValue value) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual char * the_name (
        void) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::PortableServer::POA_ptr the_parent (
        void) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::PortableServer::POAList * the_children (
        void) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::PortableServer::POAManager_ptr the_POAManager (
        void) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::PortableServer::POAManagerFactory_ptr the_POAManagerFactory (
        void) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::PortableServer::AdapterActivator_ptr the_activator (
        void) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void the_activator (
        ::PortableServer::AdapterActivator_ptr the_activator) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::PortableServer::ServantManager_ptr get_servant_manager (
        void) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void set_servant_manager (
        ::PortableServer::ServantManager_ptr imgr) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::PortableServer::Servant get_servant (
        void) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void set_servant (
        ::PortableServer::Servant p_servant) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::PortableServer::ObjectId * activate_object (
        ::PortableServer::Servant p_servant) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void activate_object_with_id (
        const ::PortableServer::ObjectId & id,
        ::PortableServer::Servant p_servant) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void deactivate_object (
        const ::PortableServer::ObjectId & oid) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::Object_ptr create_reference (
        const char * intf) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::Object_ptr create_reference_with_id (
        const ::PortableServer::ObjectId & oid,
        const char * intf) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::PortableServer::ObjectId * servant_to_id (
        ::PortableServer::Servant p_servant) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::Object_ptr servant_to_reference (
        ::PortableServer::Servant p_servant) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::PortableServer::Servant reference_to_servant (
        ::CORBA::Object_ptr reference) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::PortableServer::ObjectId * reference_to_id (
        ::CORBA::Object_ptr reference) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::PortableServer::Servant id_to_servant (
        const ::PortableServer::ObjectId & oid) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::Object_ptr id_to_reference (
        const ::PortableServer::ObjectId & oid) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::OctetSeq * id (
        void) = 0;
    
    // TAO_IDL - Generated from
    // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:216
    
    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    POA (void);
    
    virtual ~POA (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    POA (const POA &);
    
    void operator= (const POA &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_PortableServer_Export ::CORBA::TypeCode_ptr const _tc_POA;

// TAO_IDL - Generated from
// a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:78

} // module PortableServer

// TAO_IDL - Generated from
// be\be_visitor_traits.cpp:64


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_PORTABLESERVER_POAMANAGER__TRAITS_)
#define _PORTABLESERVER_POAMANAGER__TRAITS_
  
  template<>
  struct TAO_PortableServer_Export Objref_Traits< ::PortableServer::POAManager>
  {
    static ::PortableServer::POAManager_ptr duplicate (
        ::PortableServer::POAManager_ptr p
      );
    static void release (
        ::PortableServer::POAManager_ptr p
      );
    static ::PortableServer::POAManager_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::PortableServer::POAManager_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_PORTABLESERVER_POAMANAGERFACTORY__TRAITS_)
#define _PORTABLESERVER_POAMANAGERFACTORY__TRAITS_
  
  template<>
  struct TAO_PortableServer_Export Objref_Traits< ::PortableServer::POAManagerFactory>
  {
    static ::PortableServer::POAManagerFactory_ptr duplicate (
        ::PortableServer::POAManagerFactory_ptr p
      );
    static void release (
        ::PortableServer::POAManagerFactory_ptr p
      );
    static ::PortableServer::POAManagerFactory_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::PortableServer::POAManagerFactory_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_PORTABLESERVER_ADAPTERACTIVATOR__TRAITS_)
#define _PORTABLESERVER_ADAPTERACTIVATOR__TRAITS_
  
  template<>
  struct TAO_PortableServer_Export Objref_Traits< ::PortableServer::AdapterActivator>
  {
    static ::PortableServer::AdapterActivator_ptr duplicate (
        ::PortableServer::AdapterActivator_ptr p
      );
    static void release (
        ::PortableServer::AdapterActivator_ptr p
      );
    static ::PortableServer::AdapterActivator_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::PortableServer::AdapterActivator_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_PORTABLESERVER_SERVANTMANAGER__TRAITS_)
#define _PORTABLESERVER_SERVANTMANAGER__TRAITS_
  
  template<>
  struct TAO_PortableServer_Export Objref_Traits< ::PortableServer::ServantManager>
  {
    static ::PortableServer::ServantManager_ptr duplicate (
        ::PortableServer::ServantManager_ptr p
      );
    static void release (
        ::PortableServer::ServantManager_ptr p
      );
    static ::PortableServer::ServantManager_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::PortableServer::ServantManager_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_PORTABLESERVER_POA__TRAITS_)
#define _PORTABLESERVER_POA__TRAITS_
  
  template<>
  struct TAO_PortableServer_Export Objref_Traits< ::PortableServer::POA>
  {
    static ::PortableServer::POA_ptr duplicate (
        ::PortableServer::POA_ptr p
      );
    static void release (
        ::PortableServer::POA_ptr p
      );
    static ::PortableServer::POA_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::PortableServer::POA_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:53



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_PortableServer_Export void operator<<= ( ::CORBA::Any &, const PortableServer::POAList &); // copying version
TAO_PortableServer_Export void operator<<= ( ::CORBA::Any &, PortableServer::POAList*); // noncopying version
TAO_PortableServer_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, PortableServer::POAList *&); // deprecated
TAO_PortableServer_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const PortableServer::POAList *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:54



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace PortableServer
{
  TAO_PortableServer_Export void operator<<= ( ::CORBA::Any &, POA_ptr); // copying
  TAO_PortableServer_Export void operator<<= ( ::CORBA::Any &, POA_ptr *); // non-copying
  TAO_PortableServer_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, POA_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_PortableServer_Export void operator<<= (::CORBA::Any &, PortableServer::POA_ptr); // copying
TAO_PortableServer_Export void operator<<= (::CORBA::Any &, PortableServer::POA_ptr *); // non-copying
TAO_PortableServer_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, PortableServer::POA_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:53

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_PortableServer_Export void operator<<= (::CORBA::Any &, const PortableServer::POA::AdapterAlreadyExists &); // copying version
TAO_PortableServer_Export void operator<<= (::CORBA::Any &, PortableServer::POA::AdapterAlreadyExists*); // noncopying version
TAO_PortableServer_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, PortableServer::POA::AdapterAlreadyExists *&); // deprecated
TAO_PortableServer_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const PortableServer::POA::AdapterAlreadyExists *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:53

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_PortableServer_Export void operator<<= (::CORBA::Any &, const PortableServer::POA::AdapterNonExistent &); // copying version
TAO_PortableServer_Export void operator<<= (::CORBA::Any &, PortableServer::POA::AdapterNonExistent*); // noncopying version
TAO_PortableServer_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, PortableServer::POA::AdapterNonExistent *&); // deprecated
TAO_PortableServer_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const PortableServer::POA::AdapterNonExistent *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:53

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_PortableServer_Export void operator<<= (::CORBA::Any &, const PortableServer::POA::InvalidPolicy &); // copying version
TAO_PortableServer_Export void operator<<= (::CORBA::Any &, PortableServer::POA::InvalidPolicy*); // noncopying version
TAO_PortableServer_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, PortableServer::POA::InvalidPolicy *&); // deprecated
TAO_PortableServer_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const PortableServer::POA::InvalidPolicy *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:53

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_PortableServer_Export void operator<<= (::CORBA::Any &, const PortableServer::POA::NoServant &); // copying version
TAO_PortableServer_Export void operator<<= (::CORBA::Any &, PortableServer::POA::NoServant*); // noncopying version
TAO_PortableServer_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, PortableServer::POA::NoServant *&); // deprecated
TAO_PortableServer_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const PortableServer::POA::NoServant *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:53

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_PortableServer_Export void operator<<= (::CORBA::Any &, const PortableServer::POA::ObjectAlreadyActive &); // copying version
TAO_PortableServer_Export void operator<<= (::CORBA::Any &, PortableServer::POA::ObjectAlreadyActive*); // noncopying version
TAO_PortableServer_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, PortableServer::POA::ObjectAlreadyActive *&); // deprecated
TAO_PortableServer_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const PortableServer::POA::ObjectAlreadyActive *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:53

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_PortableServer_Export void operator<<= (::CORBA::Any &, const PortableServer::POA::ObjectNotActive &); // copying version
TAO_PortableServer_Export void operator<<= (::CORBA::Any &, PortableServer::POA::ObjectNotActive*); // noncopying version
TAO_PortableServer_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, PortableServer::POA::ObjectNotActive *&); // deprecated
TAO_PortableServer_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const PortableServer::POA::ObjectNotActive *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:53

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_PortableServer_Export void operator<<= (::CORBA::Any &, const PortableServer::POA::ServantAlreadyActive &); // copying version
TAO_PortableServer_Export void operator<<= (::CORBA::Any &, PortableServer::POA::ServantAlreadyActive*); // noncopying version
TAO_PortableServer_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, PortableServer::POA::ServantAlreadyActive *&); // deprecated
TAO_PortableServer_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const PortableServer::POA::ServantAlreadyActive *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:53

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_PortableServer_Export void operator<<= (::CORBA::Any &, const PortableServer::POA::ServantNotActive &); // copying version
TAO_PortableServer_Export void operator<<= (::CORBA::Any &, PortableServer::POA::ServantNotActive*); // noncopying version
TAO_PortableServer_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, PortableServer::POA::ServantNotActive *&); // deprecated
TAO_PortableServer_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const PortableServer::POA::ServantNotActive *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:53

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_PortableServer_Export void operator<<= (::CORBA::Any &, const PortableServer::POA::WrongAdapter &); // copying version
TAO_PortableServer_Export void operator<<= (::CORBA::Any &, PortableServer::POA::WrongAdapter*); // noncopying version
TAO_PortableServer_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, PortableServer::POA::WrongAdapter *&); // deprecated
TAO_PortableServer_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const PortableServer::POA::WrongAdapter *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_exception/any_op_ch.cpp:53

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_PortableServer_Export void operator<<= (::CORBA::Any &, const PortableServer::POA::WrongPolicy &); // copying version
TAO_PortableServer_Export void operator<<= (::CORBA::Any &, PortableServer::POA::WrongPolicy*); // noncopying version
TAO_PortableServer_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, PortableServer::POA::WrongPolicy *&); // deprecated
TAO_PortableServer_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const PortableServer::POA::WrongPolicy *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be\be_codegen.cpp:1228


TAO_END_VERSIONED_NAMESPACE_DECL

#include /**/ "ace/post.h"

#endif /* ifndef */


