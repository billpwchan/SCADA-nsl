// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler v1.6a_p15 ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be\be_codegen.cpp:135

#ifndef _TAO_PIDL_STRATEGIES_COIOP_ENDPOINTSC_H_
#define _TAO_PIDL_STRATEGIES_COIOP_ENDPOINTSC_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "tao/Strategies/strategies_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/Basic_Types.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include /**/ "tao/Versioned_Namespace.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_Strategies_Export

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:49

namespace TAO
{
  
  // TAO_IDL - Generated from
  // be\be_type.cpp:269
  
  struct COIOP_Endpoint_Info;
  
  typedef
    TAO_Var_Var_T<
        COIOP_Endpoint_Info
      >
    COIOP_Endpoint_Info_var;
  
  typedef
    TAO_Out_T<
        COIOP_Endpoint_Info
      >
    COIOP_Endpoint_Info_out;
  
  // TAO_IDL - Generated from
  // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:57
  
  struct TAO_Strategies_Export COIOP_Endpoint_Info
  {
    typedef COIOP_Endpoint_Info_var _var_type;
    typedef COIOP_Endpoint_Info_out _out_type;
    
    static void _tao_any_destructor (void *);
    TAO::String_Manager uuid;
    ::CORBA::Short priority;
  };
  
  // TAO_IDL - Generated from
  // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_Strategies_Export ::CORBA::TypeCode_ptr const _tc_COIOP_Endpoint_Info;
  
  // TAO_IDL - Generated from
  // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:107

#if !defined (_TAO_COIOPENDPOINTSEQUENCE_CH_)
#define _TAO_COIOPENDPOINTSEQUENCE_CH_
  
  class COIOPEndpointSequence;
  
  typedef
    TAO_VarSeq_Var_T<
        COIOPEndpointSequence
      >
    COIOPEndpointSequence_var;
  
  typedef
    TAO_Seq_Out_T<
        COIOPEndpointSequence
      >
    COIOPEndpointSequence_out;
  
  class TAO_Strategies_Export COIOPEndpointSequence
    : public
        TAO::unbounded_value_sequence<
            COIOP_Endpoint_Info
          >
  {
  public:
    COIOPEndpointSequence (void);
    COIOPEndpointSequence ( ::CORBA::ULong max);
    COIOPEndpointSequence (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        COIOP_Endpoint_Info* buffer, 
        ::CORBA::Boolean release = false
      );
    COIOPEndpointSequence (const COIOPEndpointSequence &);
    virtual ~COIOPEndpointSequence (void);
    
    static void _tao_any_destructor (void *);
    
    typedef COIOPEndpointSequence_var _var_type;
    typedef COIOPEndpointSequence_out _out_type;
    
    
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49
  
  extern TAO_Strategies_Export ::CORBA::TypeCode_ptr const _tc_COIOPEndpointSequence;

// TAO_IDL - Generated from
// a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_ch.cpp:78

} // module TAO

// TAO_IDL - Generated from
// be\be_visitor_traits.cpp:64


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_structure/any_op_ch.cpp:53



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Strategies_Export void operator<<= (::CORBA::Any &, const TAO::COIOP_Endpoint_Info &); // copying version
TAO_Strategies_Export void operator<<= (::CORBA::Any &, TAO::COIOP_Endpoint_Info*); // noncopying version
TAO_Strategies_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TAO::COIOP_Endpoint_Info *&); // deprecated
TAO_Strategies_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TAO::COIOP_Endpoint_Info *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/any_op_ch.cpp:53



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Strategies_Export void operator<<= ( ::CORBA::Any &, const TAO::COIOPEndpointSequence &); // copying version
TAO_Strategies_Export void operator<<= ( ::CORBA::Any &, TAO::COIOPEndpointSequence*); // noncopying version
TAO_Strategies_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TAO::COIOPEndpointSequence *&); // deprecated
TAO_Strategies_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TAO::COIOPEndpointSequence *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:54



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

TAO_Strategies_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const TAO::COIOP_Endpoint_Info &);
TAO_Strategies_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, TAO::COIOP_Endpoint_Info &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// a:\softs\softs_5_3\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_TAO_COIOPEndpointSequence_H_
#define _TAO_CDR_OP_TAO_COIOPEndpointSequence_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



TAO_Strategies_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const TAO::COIOPEndpointSequence &_tao_sequence
  );
TAO_Strategies_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    TAO::COIOPEndpointSequence &_tao_sequence
  );
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_TAO_COIOPEndpointSequence_H_ */

// TAO_IDL - Generated from
// be\be_codegen.cpp:1228


TAO_END_VERSIONED_NAMESPACE_DECL

#include /**/ "ace/post.h"

#endif /* ifndef */


