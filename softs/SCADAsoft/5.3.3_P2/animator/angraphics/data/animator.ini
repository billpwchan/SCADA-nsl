// --------------------------------------------------------------------------
//     SYSECA                                                   Animator 98
// --------------------------------------------------------------------------
//                              ANIMATOR.INI
//
//     animator.ini file
// --------------------------------------------------------------------------


// --------------------------------------------------------------------------
// Workspace Definitions
// --------------------------------------------------------------------------
Define WorkSpace
{
//  Default resources
//  =================
    Default Background            = "background";
    Default Foreground            = "foreground";
    Default Font                  = "default";
    Default Pattern               = "solid";
    Default LineStyle             = "solid";
    Default LineWidth             = 1;
    Default Blinking Rate         = "default";
    Default Animation Rate        = "default";

    Interaction Ignores Expanded Bbox = False;
	
    // SCADAsoft only
    Key Action Trigger Up		= False;
    Left Button Action Trigger Up	= True;
    Middle Button Action Trigger Up	= False;
    Right Button Action Trigger Up	= False;

    Highlight Distance  = 2;
    Highlight Thickness = 1;

    Quality Distance    = 3;
    Quality Thickness   = 1;

    Input Font          = "default";

    Save Binary Properties = False;

    // Beware: this resource may generate side effects regarding DSS images generation
    Expand Zoomable Label Bbox  = 1.02;

    // Use these resources to expand drawing areas
    // when objects using line width > 1 are not 
    // correctly refreshed.
    Expand Draw Bbox Width  = 0;
    Expand Draw Bbox Height = 0;    

    // Tooltips management (defaults = False, False)
    Enable Tooltips    = False;
    Propagate Tooltips = False;

    // Customize designation type: BBOX (default) or GRAPHIC (costs more CPU)
    Designate Type     =  "BBOX";
}

// --------------------------------------------------------------------------
// Tooltip Definition
// --------------------------------------------------------------------------
Define Tooltip
{
    // Animator's tooltips palette (defaults = default palette)
    Background Color    = "TooltipBgd";
    Foreground Color    = "TooltipFgd";
    Font                = "TooltipFont";
    
    // Animator's tooltips properties (defaults = 4, 4, Left)
    Horizontal Margin   = 4;
    Vertical Margin     = 4;
    Multiline Alignment = "Center";
    
    // Application's tooltips properties (defaults = 0, 20, 500)
    Horizontal Offset   = 0;
    Vertical Offset     = 20;
    Timer Period        = 500;
}

// --------------------------------------------------------------------------
// Line Style Definitions
// --------------------------------------------------------------------------
Define LineStyles
{
    Define LineStyle "LineStyle 1" { Value = "dashdot"; }
    Define LineStyle "LineStyle 2" { Value = "solid"; }
    Define LineStyle "LineStyle 3" { Value = "dash"; }
    Define LineStyle "LineStyle 4" { Value = "longdash"; }
    Define LineStyle "LineStyle 5" { Value = "alternate"; }
    Define LineStyle "LineStyle 6" { Value = "dot"; }
    Define LineStyle "LineStyle 7" { Value = "dashdoubledot"; }
    Define LineStyle "LineStyle 8" { Value = "doubledot"; }
}

// --------------------------------------------------------------------------
// Layer Definitions
// --------------------------------------------------------------------------
Define Ordered Layers
{
}


// --------------------------------------------------------------------------
// Declutter Level Definitions
// --------------------------------------------------------------------------
Define Decluttering
{
}

// --------------------------------------------------------------------------
// Color Definitions
// --------------------------------------------------------------------------
Define Ordered Colors
{
    Define Color "background"     { Value = COLOR("black");     }
    Define Color "foreground"     { Value = COLOR("white");     }
    Define Color "alarm"          { Value = COLOR("red");       }
    Define Color "select"         { Value = COLOR("pink");      }
    Define Color "highlight"      { Value = COLOR("yellow");    }
    // Editor colors
    Define Color "grid"           { Value = COLOR("white");    }
    Define Color "edition"        { Value = COLOR("yellow");    }
    Define Color "designate"      { Value = COLOR("cyan");    }
    Define Color "topology"       { Value = COLOR("green");    }
    Define Color "draw selection" { Value = COLOR("yellow");    }
    // Tooltip colors
    Define Color "TooltipFgd"	  { Value = RGB(0, 0, 0); }
    Define Color "TooltipBgd"	  { Value = RGB(65280, 65280, 57344); }
}

// --------------------------------------------------------------------------
// Blinking Definitions
// --------------------------------------------------------------------------
Define Blinking
{
    Define BlinkingRate "default" { Rate    = 1000; }
}
// --------------------------------------------------------------------------
// Animation Definitions
//  - Animation rate must be a multiple of 250 ms
//  - Direction can take the following values :
//		- AnIncrease : Increasing symbol number
//		- AnDecrease : Decreasing symbol number
// --------------------------------------------------------------------------
Define Animation
{
    Define AnimationRate "default" 
    {
    	Rate    = 250;
    	Comment = "250 ms Symbol number increasing";
    	Direction = "AnIncrease";
    }
}
// --------------------------------------------------------------------------
// Font Definitions
// --------------------------------------------------------------------------
Define Ordered Fonts
{
    Define Font "default"
    {
        Type    = "System";
        Font    = "%courier-14-";
    }
    Define Font "dxf"
    {
        Type    = "Vectorial";
        Font    = "default";
        Height  = 14;
    }
    Define Font "WinDefault"
    {
        Type    = "System" ;
        Font    = "%Microsoft Sans Serif-11-";
    }  
}

// --------------------------------------------------------------------------
// Image Definitions
// --------------------------------------------------------------------------
Define Image
{
    X                   = 0;
    Y                   = 0;

    Background Color    = "background";

    Highlight Color     = "highlight";
    Select Color        = "select";
    Alarm Color         = "alarm";

    Double Buffering    = True;

    Interactor          = "AnPanZoomInteractor";

    Default Cursor      = "default";

    Addressing          = "Both";
}

// --------------------------------------------------------------------------
// HotSpot Definitions
// --------------------------------------------------------------------------
Define HotSpot
{
    Visibility = False;

    Cursor     = "cross";
}

// --------------------------------------------------------------------------
// Zoom Definitions
// --------------------------------------------------------------------------
Define Zoom
{
    Minimal Zoom Factor =   0.01;
    Maximal Zoom Factor = 100.0;

    Default Zoom Factor =   0.0;
	Zoom Period         = 33;
}

// --------------------------------------------------------------------------
// Standard Interactor Definitions
// --------------------------------------------------------------------------
Define RectangleZoomInteractor
{
    Zoom Button 	= "AnLeftButton";
    Keep View Ratio     = True; // Should ALWAYS be "True" !
    Draw Computed Ghost = False;
    Grab Events         = True;
}
Define PanZoomInteractor
{
    Pan Button      = "AnLeftButton";
    Zoom In Button  = "AnMiddleButton";
    Zoom Out Button = "AnRightButton";

    Zoom Step       = 10%;
}
Define PanoramicInteractor
{
    Pan Button  = "AnMiddleButton";
    Zoom Button = "AnRightButton";
}
// PCU 05/25/04 - FFT SCS 406 : New rectangle selection interactor
Define RectangleSelectionInteractor
{
    Selection Button = "AnLeftButton";
    Pan Button  = "AnMiddleButton";
    Selection Threshold = 10;
}
// --------------------------------------------------------------------------
// Event Definitions
// --------------------------------------------------------------------------
Define EventActions
{
    Pan Ratio           = 4;    // i.e. 1/4 of view height or width
    Fast Pan Ratio      = 1;    //      1 view height or width
    Zoom In Delta       = 30%;
    Fast Zoom In Delta  = 60%;
    Slow Pointer Step   = 1;   // i.e. 1  screen pixel(s)
    Pointer Step        = 10;  //      10       "
    Fast Pointer Step   = 30;  //      30       "

    Define EventAction "SetPanZoomInteractor"
    {
        Type      = "AnKeyDown";
        ButtonKey = "AnF1Key";
        Actions   = { "AnSetPanZoomInteractor" };
    }
    Define EventAction "SetPointModeInteractor"
    {
        Type      = "AnKeyDown";
        ButtonKey = "AnF2Key";
        Actions   = { "AnSetPointModeInteractor" };
    }
    Define EventAction "SetDesignateInteractor"
    {
        Type      = "AnKeyDown";
        ButtonKey = "AnF3Key";
        Actions   = { "AnSetDesignateInteractor" };
    }
    Define EventAction "SetRectangleZoomInteractor"
    {
        Type      = "AnKeyDown";
        ButtonKey = "AnF4Key";
        Actions   = { "AnSetRectangleZoomInteractor" };
    }
    Define EventAction "SetPanoramicInteractor"
    {
        Type      = "AnKeyDown";
        ButtonKey = "AnF5Key";
        Actions   = { "AnSetPanoramicInteractor" };
    }
    Define EventAction "Bell"
    {
        Type      = "AnKeyDown";
        ButtonKey = "Ctrl-g";
        Actions   = { "AnBell", "AnDebugAction" };
    }
    Define EventAction "Identity"
    {
        Type      = "AnKeyUp";
        ButtonKey = "AnHomeKey";
        Actions   = { "AnIdentity" };
    }
    Define EventAction "Fit"
    {
        Type      = "AnKeyUp";
        ButtonKey = "AnEndKey";
        Actions   = { "AnFit" };
    }
    Define EventAction "ZoomIn"
    {
        Type      = "AnKeyDown";
        ButtonKey = "AnPageUpKey";
        Actions   = { "AnZoomIn" };
    }
    Define EventAction "ZoomOut"
    {
        Type      = "AnKeyDown";
        ButtonKey = "AnPageDownKey";
        Actions   = { "AnZoomOut" };
    }
    Define EventAction "FastZoomIn"
    {
        Type      = "AnKeyDown";
        ButtonKey = "AnPageUpKey";
        Modifiers = "AnShiftModifier";
        Actions   = { "AnFastZoomIn" };
    }
    Define EventAction "FastZoomOut"
    {
        Type      = "AnKeyDown";
        ButtonKey = "AnPageDownKey";
        Modifiers = "AnShiftModifier";
        Actions   = {  "AnFastZoomOut" };
    }
    Define EventAction "PanUp"
    {
        Type      = "AnKeyDown";
        ButtonKey = "AnUpKey";
        Actions   = { "AnPanUp" };
    }
    Define EventAction "PanDown"
    {
        Type      = "AnKeyDown";
        ButtonKey = "AnDownKey";
        Actions   = { "AnPanDown" };
    }
    Define EventAction "PanLeft"
    {
        Type      = "AnKeyDown";
        ButtonKey = "AnLeftKey";
        Actions   = { "AnPanLeft" };
    }
    Define EventAction "PanRight"
    {
        Type      = "AnKeyDown";
        ButtonKey = "AnRightKey";
        Actions   = { "AnPanRight" };
    }
    Define EventAction "FastPanUp"
    {
        Type      = "AnKeyDown";
        ButtonKey = "AnUpKey";
        Modifiers = "AnShiftModifier";
        Actions   = { "AnFastPanUp" };
    }
    Define EventAction "FastPanDown"
    {
        Type      = "AnKeyDown";
        ButtonKey = "AnDownKey";
        Modifiers = "AnShiftModifier";
        Actions   = { "AnFastPanDown" };
    }
    Define EventAction "FastPanLeft"
    {
        Type      = "AnKeyDown";
        ButtonKey = "AnLeftKey";
        Modifiers = "AnShiftModifier";
        Actions   = { "AnFastPanLeft" };
    }
    Define EventAction "FastPanRight"
    {
        Type      = "AnKeyDown";
        ButtonKey = "AnRightKey";
        Modifiers = "AnShiftModifier";
        Actions   = { "AnFastPanRight" };
    }
    Define EventAction "PointerUp"
    {
        Type      = "AnKeyDown";
        ButtonKey = "k";
        Actions   = { "AnPointerUp" };
    }
    Define EventAction "PointerDown"
    {
        Type      = "AnKeyDown";
        ButtonKey = "l";
        Actions   = { "AnPointerDown" };
    }
    Define EventAction "PointerLeft"
    {
        Type      = "AnKeyDown";
        ButtonKey = "j";
        Actions   = { "AnPointerLeft" };
    }
    Define EventAction "PointerRight"
    {
        Type      = "AnKeyDown";
        ButtonKey = "m";
        Actions   = { "AnPointerRight" };
    }
    Define EventAction "FastPointerUp"
    {
        Type      = "AnKeyDown";
        ButtonKey = "Ctrl-K";
        Actions   = { "AnFastPointerUp" };
    }
    Define EventAction "FastPointerDown"
    {
        Type      = "AnKeyDown";
        ButtonKey = "Ctrl-L";
        Actions   = { "AnFastPointerDown" };
    }
    Define EventAction "FastPointerLeft"
    {
        Type      = "AnKeyDown";
        ButtonKey = "Ctrl-J";
        Actions   = { "AnFastPointerLeft" };
    }
    Define EventAction "FastPointerRight"
    {
        Type      = "AnKeyDown";
        ButtonKey = "Ctrl-M";
        Actions   = { "AnFastPointerRight" };
    }
    Define EventAction "SlowPointerUp"
    {
        Type      = "AnKeyDown";
        ButtonKey = "K";
        Actions   = { "AnSlowPointerUp" };
    }
    Define EventAction "SlowPointerDown"
    {
        Type      = "AnKeyDown";
        ButtonKey = "L";
        Actions   = { "AnSlowPointerDown" };
    }
    Define EventAction "SlowPointerLeft"
    {
        Type      = "AnKeyDown";
        ButtonKey = "J";
        Actions   = { "AnSlowPointerLeft" };
    }
    Define EventAction "SlowPointerRight"
    {
        Type      = "AnKeyDown";
        ButtonKey = "M";
        Actions   = { "AnSlowPointerRight" };
    }
}

// --------------------------------------------------------------------------
